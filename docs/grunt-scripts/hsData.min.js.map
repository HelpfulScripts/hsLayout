{"version":3,"sources":["../src/init/init.js","../src/HsData.js","../src/hsDataLoader.js","../src/hsDataType.js","../src/index.js"],"names":["angular","module","factory","hs","register","HsObject","hsDataType","hsDataLoader","hsDeprecated","addSeries","meta","newName","newIndex","parseInt","m","undefined","name","column","push","cast","accessed","length","createData","address","getDomain","col","s","r","colNumber","obj","url","types","getTypes","console","log","gMeta","domain","forced","type","gValues","castData","isNaN","Math","min","max","Date","t","_t","getType","result","count","c","sort","a","b","newColumn","newFn","newCol","_values","map","cols","i","arr","rowValues","slice","newRow","row","copy","newObj","data","values","deep","_meta","n","err","Error","stack","invalidateDomains","query","conditions","rows","applyCondition","condition","and","orResult","andResult","conditionMet","or","not","val","func","_outerFunction","args","colValues","colIndex","colType","newType","colDomain","newDomain","colName","names","filter","filterObj","deprecated","sortFn","descendingNum","ascendingNum","descending","ascending","row1","row2","mapFn","noop","cumulate","sum","newCols","castCol","Array","load","http","then","series","reason","id","random","gCount","HsPromise","resolveRelay","indexOf","encodeURIComponent","substring","csvURL","urlCache","fulfill","reject","get","success","arrayFromCSVData","error","status","JSON","stringify","replace","lf","match","cr","split","exclude","trim","e","splice","toCSVData","hsData","toDate","str","limitYear","d","yy","getFullYear","setFullYear","sample","getTime","parseFloat","toLowerCase"],"mappings":";;;AAAA;AACA,AAAwB,EAAtB,CAAC,CAAC,MAAM,CAAC,OAAO,CAAR,AAAS,CAAC,GAAG,CAAC,CAAC,IAAcA,KAAL,EAAE,CAAC,AAAUC,CAAT,CAAC,KAAc,EAAP,CAAC,MAAM,EAAE,ECmG/B,IDnGqC,EAAE,CAAC,IAAI,CAAC,C,MCmG3D,UACTD,QAAQC,OAAM,UAAWC,QAAO,SAAW,WAC1C,MAAOC,IAAE,YAIXA,GAAGC,SAAQ,UAAW,WAAa,aAAc,eAAgB,eAAgB,SAAgBC,EAAUC,EAAYC,EAAcC,GACjI,YAKA,SAASC,GAAUC,EAAMC,EAASC,GAC9B,GAAID,KAA6B,GAAhBE,SAASF,IAAgB,KAAM,WAAaA,EAAU,oBACvE,IAAIG,GAAIJ,EAAKC,EASb,OARUI,UAAND,IACAA,EAAIJ,EAAKC,MACTG,EAAEE,KAASL,EACXG,EAAEG,OAASL,EACXF,EAAKQ,KAAKJ,IAEdA,EAAEK,MAAW,EACbL,EAAEM,UAAW,EACNV,EAAKW,OAAO,EAGvB,QAASC,GAAWC,GAShB,QAASC,GAAUC,EAAKN,GACpB,GAAIO,GAAGC,CAEP,IADAF,EAAMG,EAAUH,GACJV,SAARU,EAAqB,KAAM,SAAWA,EAAM,yBAA2BI,EAAIC,GAC/E,IAAIC,GAAQC,EAASP,EACrB,IAAqB,IAAjBM,EAAMV,OAEN,MADAY,SAAQC,IAAG,8CAAiDT,EAAM,KAAQU,EAAMV,GAAKT,KAAO,OAEzF,IAAIe,EAAM,GAAGK,QAAUL,EAAM,GAAGK,OAAOf,OAAO,GAAKU,EAAM,GAAGM,OAC/D,MAAON,GAAM,GAAGK,MAGpB,IAAIE,GAAOP,EAAM,GAAGO,KAChBF,EAAc,YAAJE,MAAyB,KAAM,OACzCxB,EAAIJ,EAAKe,EAIb,QAHAX,EAAEM,UAAW,EACTN,EAAEK,QAAS,IAAQA,GAAO,GAC1BA,KAAS,IAAQL,EAAEK,MAAO,GACtBmB,GACJ,IAAK,UACD,IAAKX,EAAE,EAAGA,EAAEY,EAAQlB,OAAQM,IACxBD,EAAI,IAAMa,EAAQZ,GAAGF,GAAO,IACxBC,GAAM,KAADA,GAAW,MAADA,IAAYU,EAAOV,IAAoBX,SAAbW,EAAEL,QAAyBK,EAAEL,OAAO,IAC7Ee,EAAOlB,KAAKQ,GACZU,EAAOV,IAAK,EAGpB,MACJ,KAAK,OAAQ,KACb,SACI,IAAKC,EAAE,EAAGA,EAAEY,EAAQlB,OAAQM,IACxBD,EAAIa,EAAQZ,GAAGF,GAAON,EAAMb,EAAWkC,SAASF,EAAMC,EAAQZ,GAAGF,IAAQc,EAAQZ,GAAGF,GAC/EgB,MAAMf,KACPU,EAAO,GAAKM,KAAKC,IAAIP,EAAO,GAAIV,GAChCU,EAAO,GAAKM,KAAKE,IAAIR,EAAO,GAAIV,IAahD,MATa,SAATY,IACIF,EAAO,GAAK,MAAQA,EAAO,GAAK,OAChCA,EAAO,GAAK,GAAIS,MAAKT,EAAO,IAC5BA,EAAO,GAAK,GAAIS,MAAKT,EAAO,KAE5BA,MAGRL,EAAM,GAAGK,OAASA,EACXA,EAOX,QAASJ,GAASP,GACd,GAAIX,GAAIJ,EAAKe,EACb,IAAIX,EAAEiB,OAASjB,EAAEiB,MAAMV,OAAO,EAAK,MAAOP,GAAEiB,KAC5C,IAAIe,KACJrB,GAAMX,EAAEG,OACRH,EAAEM,UAAW,CACb,KAAK,GAAIO,GAAE,EAAGA,EAAEY,EAAQlB,OAAQM,IAAK,CACjC,GAAIoB,GAAKzC,EAAW0C,QAAQT,EAAQZ,GAAGF,GAC7B,OAANsB,IACKD,EAAEC,KAAOD,EAAEC,GAAI,GACpBD,EAAEC,MAGV,GAAIE,KAAWX,KAAI,OAASY,MAAM,GAClC,KAAK,GAAIC,KAAKL,GAAKG,EAAO/B,MAAMoB,KAAMa,EAAGD,MAAOJ,EAAEK,IASlD,OARAF,GAAOG,KAAK,SAASC,EAAGC,GACpB,MAAe,SAAXD,EAAEf,KAA2B,EAClB,SAAXgB,EAAEhB,KAA2B,GACvB,aAANe,EAAEf,MAAmBe,EAAEH,MAAM,EAAY,GACnC,aAANI,EAAEhB,MAAmBgB,EAAEJ,MAAM,EAAY,EACtCI,EAAEJ,MAAQG,EAAEH,QAEvBpC,EAAEiB,MAAQkB,EACHA,EAmBX,QAASM,GAAU5C,EAAS6C,GACxB,GAAIC,GAAShD,EAAU0B,EAAOxB,EAASwB,EAAMd,OAO7C,OALAQ,GAAI6B,QAAUnB,EAAUA,EAAQoB,IAAI,SAASC,EAAMC,EAAGC,GAClD,GAAIC,GAAYH,EAAKI,MAAM,EAE3B,OADAD,GAAUN,GAAUD,EAAMO,EAAWF,EAAGC,GACjCC,IAEJN,EAcX,QAASQ,GAAOT,GACZ,GAAIU,GAAMV,EAAMjB,EAEhB,OADAA,GAAQrB,KAAKgD,GACN3B,EAAQlB,OAAO,EAe1B,QAAS8C,KACL,GAAIC,GAAS9C,EAAWO,EAAIC,IAE5B,OADAsC,GAAOC,KAAK9B,EAASJ,GAAO,GACrBiC,EAiBX,QAASC,GAAKC,EAAQ5D,EAAM6D,GAExB,GADWxD,SAAPwD,IAAoBA,GAAO,GAChBxD,SAAXuD,GAAiCvD,SAATL,EAExB,WADAuB,SAAQC,IAAG,0CAGf,IAAIqC,EAAM,CACN1C,EAAI6B,QAAUnB,IACd,KAAK,GAAIZ,GAAE,EAAGA,EAAE2C,EAAOjD,OAAQM,IAAK,CAChCY,EAAQZ,KACR,KAAK,GAAIwB,GAAE,EAAGA,EAAEmB,EAAO3C,GAAGN,OAAQ8B,IAC9BZ,EAAQZ,GAAGwB,GAAKmB,EAAO3C,GAAGwB,QAIrCtB,GAAI6B,QAAUnB,EAAU+B,EAAON,OAEhC,IAAIF,IAAM,CACVjC,GAAI2C,MAAQrC,KACW,gBAAZzB,GAAK,KAAmBoD,GAAM,EACzC,KAAK,GAAIW,GAAE,EAAGA,EAAE/D,EAAKW,OAAQoD,IACxBX,EAAOrD,EAAU0B,EAAOzB,EAAK+D,GAAGzD,KAAMN,EAAK+D,GAAGxD,QAC1CR,EAAU0B,EAAOzB,EAAK+D,GAAItC,EAAMd,OAElD,IAAIiD,EAAOjD,OAAO,GACJiD,EAAO,GAAGjD,SAAWX,EAAKW,OAAQ,CAClCY,QAAQC,IAAIX,EAAU,2BAA6Bb,EAAKW,OAAS,sCAAwCiD,EAAO,GAAGjD,QACnHY,QAAQC,IAAIxB,GACZuB,QAAQC,IAAIoC,EAAO,GACzB,IAAII,GAAM,GAAIC,OAAK,GACnB1C,SAAQC,IAAIwC,EAAIE,OAIf,MADAC,KACOhD,EA8FX,QAASiD,GAAMC,GACX,IAEI,IAAK,GADDC,MACKrD,EAAE,EAAGA,EAAEY,EAAQlB,OAAQM,IACxBsD,EAAeF,EAAYpD,EAAGY,EAAQZ,KAAOqD,EAAK9D,KAAKqB,EAAQZ,GAGvE,IAAIyC,GAAS9C,EAAWO,EAAIC,IAG5B,OAFAsC,GAAOC,KAAKW,EAAM7C,GAAO,GAElBiC,EACT,MAAMM,GACJzC,QAAQC,IAAIwC,GACZzC,QAAQC,IAAIwC,EAAIE,QAQxB,QAASK,GAAeC,EAAWvD,EAAGoC,EAAWoB,GAC7C,GAAIC,IAAW,EACXC,GAAW,CACf,IAAgBtE,SAAZmE,EAAyB,OAAO,CACpC,IAAyB,gBAAdA,GAA0B,MAAQA,KAAcvD,CAC3D,IAAyB,gBAAduD,GACP,GAAyBnE,SAArBmE,EAAU7D,OACV,IAAK,GAAIoD,GAAE,EAAGA,EAAES,EAAU7D,OAAQoD,IACF,gBAAjBS,GAAUT,GAChBS,EAAUT,KAAO9C,EAAKyD,GAAY,EAC1BC,GAAY,EACU,gBAAjBH,GAAUT,KACvBQ,EAAeC,EAAUT,GAAI9C,EAAGoC,GAAcqB,GAAY,EAC7DC,GAAY,OAGf,CACStE,SAARoE,IAAqBA,GAAM,EAC/B,IAAIG,GAAeH,CACnB,KAAK,GAAInE,KAAQkE,GAAW,CACxB,GAAa,OAAJlE,EAAgBsE,EAAeL,EAAeC,EAAUK,GAAI5D,EAAGoC,GAAW,OAC9E,IAAQ,QAAJ/C,EAAgBsE,EAAeL,EAAeC,EAAUC,IAAKxD,EAAGoC,GAAW,OAC/E,IAAQ,QAAJ/C,EAAgBsE,GAAgBL,EAAeC,EAAUM,IAAK7D,EAAGoC,GAAW,OAChF,CACD,GAAItC,GAAMG,EAAUZ,GAChByE,EAAMP,EAAUlE,GAChB0E,EAAuB,kBAARD,GACf3B,EAAuB,gBAAR2B,IAAmC1E,SAAb0E,EAAIpE,MAC7C,IAAIoB,MAAMhB,GACN,KAAM,IAAIkD,OAAK,2BAA8B3D,EAAO,aAAea,EAAIC,IACpE,IAAI4D,EACPJ,EAAeG,EAAI1B,EAAUtC,GAAMsC,OAChC,IAAID,EAAK,CACZwB,EAA+B,IAAfG,EAAIpE,MACpB,KAAK,GAAI8B,GAAE,EAAGA,EAAEsC,EAAIpE,OAAQ8B,IACpBY,EAAUtC,KAASgE,EAAItC,KAAMmC,GAAe,OAGpDA,GAAgBvB,EAAUtC,KAASgE,EAG3C,GAAIH,GAAmC,GAAnBF,GAAY,GAAWD,EAAO,UACpB,IAAnBE,GAAY,EAAUF,EAAQ,OAIrD,MAAOA,GAAKE,EAAYD,EAkB5B,QAASO,GAAeC,GACvB,GAAI3C,GAAS4C,EAAUD,EAAK,GAC5B,OAAO3C,GAcR,QAAS4C,GAAUpE,GAClB,GAAYV,SAARU,EAAqB,MAAOc,EAEzBd,GAAMG,EAAUH,GAChBf,EAAKe,GACLD,EAAUC,GAAK,EAEf,KAAK,GADDwB,MACKtB,EAAE,EAAGA,EAAEY,EAAQlB,OAAQM,IAAOsB,EAAOtB,GAAKY,EAAQZ,GAAGF,EAC9D,OAAOwB,GAOd,QAASvC,GAAKoF,GACb,MAAK3D,GAAM2D,IACX3D,EAAM2D,GAAU1E,UAAW,EACpBe,EAAM2D,IAFb,OAcF,QAASC,GAAQtE,EAAKuE,GAClB,GAAIlF,GAAIJ,EAAKe,EACb,IAAKX,EAAL,CACA,GAAIkF,EAAS,CACT,GAAIjE,GAAQC,EAASP,EAIrB,OAHAM,GAAM,GAAGO,KAAO0D,EAChBjE,EAAM,GAAGK,OAASrB,OAClBD,EAAEK,MAAO,EACFU,EAEX,MAAOG,GAASP,GAAK,GAAGa,MAY5B,QAAS2D,GAAUxE,EAAKyE,GACpB,GAAIpF,GAAIJ,EAAKe,EACb,IAAKX,EAKL,MAJIoF,KACAlE,EAASP,GAAK,GAAGW,OAAS8D,EAC1BlE,EAASP,GAAK,GAAGY,QAAS,GAEvBb,EAAUC,GAAK,GAY1B,QAASG,GAAUH,GACf,GAAIX,GAAIJ,EAAKe,EACb,IAAKX,EAEL,MADAA,GAAEM,UAAW,EACNN,EAAEG,OAYb,QAASkF,GAAQ1E,GACb,GAAYV,SAARU,EAAmB,CAEnB,IAAK,GADD2E,MACKjD,EAAE,EAAGA,EAAEhB,EAAMd,OAAQ8B,IAC1BiD,EAAMjD,GAAKhB,EAAMgB,GAAGnC,IAExB,OAAOoF,GAEP,GAAItF,GAAIJ,EAAKe,EAChB,IAAKX,EAEL,MADAA,GAAEM,UAAW,EACNN,EAAEE,KAId,QAAS6D,KACL,IAAK,GAAI1B,GAAE,EAAGA,EAAEhB,EAAMd,OAAQ8B,IAAOhB,EAAMgB,GAAGf,OAASrB,OA2B3D,QAASsF,GAAO5E,EAAK6E,GACjB,GAAmB,kBAAR7E,GAEP6E,EAAY7E,EACZI,EAAI6B,QAAUnB,EAAUA,EAAQ8D,OAAOC,GACvCzB,QACG,IAAoB,gBAARpD,IAAqC,gBAARA,IAA4C,kBAAd6E,GAMvE,CACHA,EAAY7E,CAEZ,KAAK,GADDwB,MACKtB,EAAE,EAAGA,EAAEY,EAAQlB,OAAQM,IAC3BsD,EAAeqB,EAAW3E,EAAGY,EAAQZ,KAAOsB,EAAO/B,KAAKqB,EAAQZ,GAErEE,GAAI6B,QAAUnB,EAAUU,EACxB4B,QAZH0B,GAAU,2CACP9E,EAAMG,EAAUH,GAChBI,EAAI6B,QAAUnB,EAAUA,EAAQ8D,OAAO,SAASzC,GAC5C,MAAO0C,GAAU1C,EAAKnC,KAW9B,OAAOI,GA8BX,QAASuB,GAAK3B,EAAK+E,GAClB,QAASC,GAAcpD,EAAGC,GAAK,MAAOA,GAAED,EACxC,QAASqD,GAAarD,EAAGC,GAAK,MAAOD,GAAEC,EACvC,QAASqD,GAAWtD,EAAGC,GAAK,MAAQA,GAAED,EAAG,EAAIC,IAAID,EAAG,EAAC,GACrD,QAASuD,GAAUvD,EAAGC,GAAK,MAAQD,GAAEC,EAAG,EAAIA,IAAID,EAAG,EAAC,GAEjD,GAAmB,kBAAR5B,GACP+E,EAAS/E,EACTc,EAAQa,KAAKoD,OACV,CACHrF,EAAKM,GACLA,EAAMG,EAAUH,EAChB,IAAIqB,GAAIiD,EAAQtE,EACM,iBAAX+E,KACG,eAANA,EAAyBA,EAAW,YAAD1D,EAAgB6D,EAAaF,EACrD,cAAND,EAAwBA,EAAW,YAAD1D,EAAgB8D,EAAYF,GAEnEzE,QAAQC,IAAG,kBAAqBsE,EAAS,mDACzCA,EAASG,IAGjBpE,EAAQa,KAAK,SAASyD,EAAMC,GACxB,MAAON,GAAOK,EAAKpF,GAAMqF,EAAKrF,MAGtC,MAAOI,GAkCX,QAAS8B,GAAIlC,EAAKsF,GACd,QAASC,GAAKvB,GAAO,MAAOA,GAC5B,QAASwB,KAAa,GAAIC,GAAI,CAAG,OAAO,UAASzB,GAAoB,MAAbyB,KAAQzB,GAsBhE,MApBmB,kBAARhE,IACPsF,EAAQtF,EACRI,EAAI6B,QAAUnB,EAAUA,EAAQoB,IAAIoD,GACpClC,MAEApD,EAAMG,EAAUH,GACP,aAALsF,EAAsBA,EAAQE,IACpB,SAALF,EAAkBA,EAAQC,EACT,kBAAVD,KACf9E,QAAQC,IAAG,iBAAoB6E,EAAQ,iDACvCA,EAAQC,GAGTnF,EAAI6B,QAAUnB,EAAUA,EAAQoB,IAAI,SAASC,EAAMC,GAC/C,GAAIsD,GAAUvD,EAAKI,MAAM,EAEzB,OADAmD,GAAQ1F,GAAOsF,EAAMI,EAAQ1F,GAAMoC,EAAGsD,GAC/BA,IAEXhF,EAAMV,GAAKW,OAASrB,QAEjBc,EAcX,QAASV,GAAKM,EAAKa,GAEf,QAAS8E,GAAQ3F,GACAV,SAATuB,IAAsBN,EAASP,GAAK,GAAGa,KAAKA,GAChD5B,EAAKkB,EAAUH,IAAMN,MAAO,EAC5BK,EAAUC,GAAK,GAJnB,GAAI0B,EAMJ,IAAYpC,SAARU,EACA,IAAK0B,EAAE,EAAGA,EAAEhB,EAAMd,OAAQ8B,IACtBhB,EAAMgB,GAAGhC,MAAO,EAChBK,EAAU2B,GAAG,OAGjB,IAAI1B,YAAe4F,OACf,IAAKlE,EAAE,EAAGA,EAAE1B,EAAIJ,OAAQ8B,IAAOiE,EAAQ3F,EAAI0B,QAE3CiE,GAAQ3F,GAkBpB,QAAS6F,GAAKC,GACnB,MAAOhH,GAAa+G,KAAKzF,EAAIC,IAAKyF,GAAMC,KACvC,SAAiBC,GAChB,MAAO5F,GAAIwC,KAAKoD,EAAOnD,OAAQmD,EAAO/G,MAAM,IAE7C,SAAiBgH,GAChB,MAAOzF,SAAQC,IAAG,2BAA8BL,EAAIC,IAAM,IAAM4F,KAK7D,GAAInF,GACAJ,EACAN,EAAM,GAAIxB,GAAQ,SA2BtB,OA1BAwB,GAAI8D,eAAiBA,EAOrB9D,EAAIC,IAAcP,EAClBM,EAAIsC,KAAcA,EAClBtC,EAAIwC,KAAcA,EAClBxC,EAAIyF,KAAcA,EAClBzF,EAAI0B,UAAcA,EAClB1B,EAAIoC,OAAaA,EACjBpC,EAAIiD,MAAcA,EAClBjD,EAAIkE,QAAcA,EAClBlE,EAAIoE,UAAcA,EAClBpE,EAAIgE,UAAYA,EAChBhE,EAAID,UAAcA,EAClBC,EAAIsE,QAAcA,EAClBtE,EAAIwE,OAAcA,EAClBxE,EAAIuB,KAAcA,EAClBvB,EAAI8B,IAAcA,EAClB9B,EAAIV,KAAcA,EAClBU,EAAI8F,GAAc9G,SAAuB,IAAd6B,KAAKkF,UAChCC,IAEOhG,EA3vBX,GAAIgG,GAAS,EACTtB,EAAa/F,GA6vBjB,OAAOc,MCn2Ba,mBAAd,UAA6BtB,QAAQC,OAAM,UAAWC,QAAO,eAAiB,WAA0B,MAAOC,IAAE,kBAE3HA,GAAGC,SAAQ,gBAAiB,YAAc,SAAuB0H,GAChE,YAIA,SAASC,GAAajG,GACf,GAAI+B,GAAI/B,EAAIkG,QAAO,UACnB,OAAQnE,GAAI,EAAI,UAAUoE,mBAAmBnG,EAAIoG,UAAUrE,EAAE,IAAM/B,EAc1E,QAASwF,GAAKa,EAAQZ,GAkBrB,MAjByBxG,UAArBqH,EAASD,KACZC,EAASD,GAAU,GAAIL,GAAU,SAASO,EAASC,GAE7CH,EAAO9G,QAAUiH,EAAM,uBAGnB,IAAI/G,GAAUwG,EAAaI,EAG3BZ,GAAKgB,IAAIhH,GAASiH,QAAQ,SAAiBnE,GAEvCgE,EAAQI,EAAiBpE,EAAM9C,MAChCmH,MAAM,SAAerE,EAAMsE,GAC7BL,EAAM,+BAAkCM,KAAKC,UAAUF,GAAU,QAAUR,QAIhFC,EAASD,GAcd,QAASM,GAAiBpE,GAC5B,QAAS5D,GAAUC,EAAMC,GACrB,GAAIA,IAAaE,SAASF,GAAO,GAAS,KAAM,WAAaA,EAAU,oBAGvE,OAFAD,GAAKC,IAAaK,KAAML,EAASM,OAAQP,EAAKW,QAC9CX,EAAKQ,KAAKR,EAAKC,IACRD,EAAKW,OAAO,EAGjBgD,EAAOA,EAAKyE,QAAO,iCAAmC,QACtD,IAEI3F,GAAGxB,EAAGiC,EAAMoB,EAFZ+D,GAAM1E,EAAK2E,MAAK,YAAa3H,OAC7B4H,GAAM5E,EAAK2E,MAAK,YAAa3H,MAEb2D,GAAhBiE,EAAG,EAAEF,EAAkB1E,EAAK6E,MAAK,QAC5BH,EAAG,EAAEE,EAAa5E,EAAK6E,MAAK,QACV7E,EAAK6E,MAAK,UAGrC,IAAIzB,IAAWnD,UAAW5D,SACtByI,IACJ,KAAKxH,EAAE,EAAGA,EAAEqD,EAAK3D,OAAQM,IAErB,GADAiC,EAAOoB,EAAKrD,GAAGuH,MAAK,KACZ,IAAJvH,EACA,IAAKwB,EAAE,EAAGA,EAAES,EAAKvC,OAAQ8B,IACL,KAAZS,EAAKT,GAAagG,EAAQjI,KAAKiC,GAC3B1C,EAAUgH,EAAO/G,KAAMkD,EAAKT,GAAGiG,YAExC,IAAIpE,EAAKrD,GAAGN,QAAUuC,EAAKvC,OAAQ,CACtC,IAAK8B,EAAE,EAAGA,EAAES,EAAKvC,OAAQ8B,IAAOS,EAAKT,GAAKS,EAAKT,GAAGiG,MAElD,KAAK,GAAIC,GAAEF,EAAQ9H,OAAO,EAAGgI,GAAG,EAAGA,IAAOzF,EAAK0F,OAAOH,EAAQE,GAAI,EAClE5B,GAAOnD,OAAOpD,KAAK0C,GAG3B,MAAO6D,GAWX,QAAS8B,GAAUC,GAClB,GAGI7H,GAAEwB,EAHFiD,EAAQoD,EAAOrD,UACf9B,EAAOmF,EAAO1E,QAAQe,YACtB5C,EAAS,EAEb,KAAKE,EAAE,EAAGA,EAAEiD,EAAM/E,OAAQ8B,IAAOF,IAAWE,EAAE,EAAC,IAAA,IAAWiD,EAAMjD,EAEhE,KADAF,GAAU,KACLtB,EAAE,EAAGA,EAAE0C,EAAKhD,OAAQM,IAAK,CAC7B,IAAKwB,EAAE,EAAGA,EAAEkB,EAAK1C,GAAGN,OAAQ8B,IAAOF,IAAWE,EAAE,EAAC,IAAA,IAAWkB,EAAK1C,GAAGwB,EACjEF,IAAU,KAEd,MAAOA,GAzGX,GAAImF,KA6GJ,QACId,KAAYA,EACfmB,iBAAmBA,EAChBc,UAAcA,MCpHK,mBAAd,UACTvJ,QAAQC,OAAM,UAAWC,QAAO,aAAe,WAC9C,MAAOC,IAAE,gBAIXA,GAAGC,SAAQ,aAAe,WActB,QAASqJ,GAAOC,EAAKC,GACjBA,EAAYA,GAAa,KACpBD,IAAOA,EAAM,WAClB,IAAIE,GAAI,GAAI/G,MAAK6G,GACbG,EAAKD,EAAEE,aAEX,OADOH,GAAHE,GAAgBD,EAAEG,YAAYF,EAAG,KAC9BD,EAaX,QAASpH,GAASF,EAAM0H,GACpB,GAAIvF,EACJ,QAAQnC,GACJ,IAAK,OAAWmC,EAAIgF,EAAOO,GACPvH,MAAMgC,EAAEwF,aAAcxF,EAAI,KAC9B,MAChB,KAAK,UAAWA,EAAIyF,WAAWF,GAAQ,IACnBvH,MAAMgC,KAAMA,EAAI,KACpB,MAChB,KAAK,WACqB,gBAAXuF,KAAuBA,EAASA,EAAOlB,QAAO,iBAAmB,IAEhF,KAAK,OAAWrE,EAAIyF,WAAWF,GACXvH,MAAMgC,KAAMA,EAAI,KACpB,MAChB,SAAgBA,EAAI,GAAGuF,EAE3B,MAAOvF,GAgBX,QAASzB,GAAQgH,GACb,GAAU,KAANA,GAAeA,EAAQ,CACvB,GAAIA,YAAkBnH,MAAQ,MAAO,MACrC,KAAKJ,OAAOuH,GAAmB,MAAO,MACtC,IAA0B,IAAtBA,EAAOhC,QAAO,OACZvF,MAAMyH,WAAWF,EAAOhG,MAAM,KAAQ,MAAO,UAGnD,IAAI4F,GAAIH,EAAOO,EACf,IAAIJ,YAAa/G,QACRJ,MAAMmH,IACHA,EAAEE,cAAc,KAAQ,MAAO,MAI3C,IAAsB,gBAAXE,GAAqB,CAC5B,GAAIA,EAAOhC,QAAO,OAAUgC,EAAO3I,OAAO,IACjCoB,MAAMyH,WAAWF,IAAY,MAAO,SAE7C,IAAIA,EAAOhB,MAAK,6BACPvG,MAAMyH,WAAWF,EAAOZ,OAAON,QAAO,iBAAmB,IAAIA,QAAO,KAAO,MAAS,MAAO,UAEpG,QAAQkB,EAAOG,eACX,IAAK,OAAQ,KACb,KAAK,QAAS,KACd,SAAS,GAAIH,EAAO3I,OAAO,EAAK,MAAO,YAInD,MAAO,MAEX,OACIoI,OAAYA,EACZjH,SAAYA,EACZQ,QAAYA;AFnHpB,GAAG;AACH,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ;AAClB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM;AACf,CAAC,CAAC,CAAC,CAAC,WAAW;AACf,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC;AACtC,CAAC,CAAC,CAAC,aAAa;AAChB,CAAC,CAAC,CAAC,QAAQ,CAAC,WAAW,CAAC,SAAS,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;AAChE,CAAC,EAAE;AACH;AACA,CAAC;AACD,GAAG;AACH,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM;AAChB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM;AAC7B,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC,QAAQ;AAC/B,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU;AAC9B,CAAC,CAAC,CAAC,CAAC,OAAO;AACX,CAAC,OAAO,CAAC,MAAM,EAAE,MAAM,EAAE;AACzB,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE;AAC1B,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,UAAU,EAAE,UAAU,EAAE;AACrC,KAAK,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC;AAClB,MAAM,CAAC,KAAK,CAAC;AACb,UAAU,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,MAAM,IAAI,CAAC,IAAI,EAAE,CAAC;AAC5D,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,EAAE,GAAG,CAAC,EAAE,CAAC,IAAI,EAAE;AACnC,YAAY,CAAC,EAAE,IAAI,KAAK,IAAI,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,MAAM,EAAE,KAAK,CAAC,EAAE,CAAC,GAAG,IAAI,KAAK,IAAI,EAAE,CAAC;AAC1E,SAAS,EAAE,EAAE,CAAC;AACd,KAAK,EAAE,KAAK,CAAC;AACb,KAAK,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,IAAI,KAAK,EAAE,CAAC;AACpC,KAAK,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,SAAS,IAAI,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,SAAS,IAAI,IAAI,KAAK,EAAE,CAAC;AACxF,KAAK,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,KAAK,IAAI;AAClC,KAAK,EAAE,GAAG,CAAC;AACX,EAAE,EAAE,IAAI,CAAC;AACT,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,EAAE,EAAE;AACzB,KAAK,OAAO,CAAC,MAAM,EAAE,MAAM,GAAG,UAAU,EAAE,UAAU,EAAE,CAAC,QAAQ,CAAC,MAAM,EAAE,KAAK,EAAE;AAC/E,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG;AACrE,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACvB,YAAY,EAAE,KAAK,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;AACpD,YAAY,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG;AAClD,YAAY,EAAE,KAAK,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE;AACrD,YAAY,EAAE,IAAI,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;AAClD,UAAU,EAAE;AACZ,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,MAAM,KAAK,KAAK,CAAC,IAAI,GAAG;AACrD,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,EAAE;AACnD,KAAK,GAAG;AACR,CAAC,EAAE,IAAI,CAAC;AACR,EAAE,OAAO,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,WAAW;AACf,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,CAAC;AAC5F,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,MAAM,EAAE,CAAC;AAClF,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AACrF,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,iBAAiB,CAAC,OAAO,CAAC,KAAK,EAAE;AACpE,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC;AACtD,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,MAAM,EAAE,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM;AACzD,CAAC,CAAC,IAAI,MAAM,CAAC,GAAG,GAAG,KAAK,GAAG,CAAC,MAAM,CAAC,KAAK;AACxC,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG;AAC3E,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC;AACvF,CAAC,CAAC,IAAI,KAAK,CAAC,IAAI,KAAK,GAAG,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM;AAC1E,CAAC,CAAC,OAAO,EAAE;AACX,CAAC,CAAC,OAAO,IAAI,CAAC,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC;AACtE,CAAC,CAAC,OAAO,KAAK,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,SAAS;AACtE,CAAC,CAAC,OAAO,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI;AAClD,CAAC,CAAC,OAAO,EAAE;AACX,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC;AACT,CAAC,EAAE,CAAC,WAAW,CAAC,SAAS;AACzB,CAAC,KAAK,CAAC;AACP,CAAC,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,iBAAiB,CAAC,SAAS,CAAC,GAAG,IAAI,EAAE,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM,GAAG,EAAE,GAAG,EAAE,CAAC;AACvI,CAAC,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,iBAAiB,CAAC,SAAS,CAAC,GAAG,IAAI,EAAE,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,SAAS,CAAC,MAAM,GAAG,EAAE,GAAG,EAAE,CAAC;AACzI,CAAC,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,KAAK,EAAE,EAAE,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,GAAG,EAAE,GAAG,EAAE,CAAC;AACjJ,CAAC,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,iBAAiB,CAAC,SAAS,CAAC,GAAG,IAAI,EAAE,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,GAAG,EAAE,GAAG,EAAE,CAAC;AAC/H,CAAC,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,eAAe,CAAC,OAAO,KAAK,EAAE,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,GAAG,EAAE,GAAG,EAAE,CAAC;AAC1G,CAAC,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,eAAe,CAAC,OAAO,CAAC,GAAG,IAAI,EAAE,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC;AACtH,CAAC,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,eAAe,CAAC,OAAO,CAAC,GAAG,IAAI,EAAE,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,GAAG,EAAE,GAAG,EAAE,CAAC;AACzH,CAAC,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,UAAU,IAAI,EAAE,EAAE,EAAE,CAAC,OAAO,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,UAAU,GAAG,EAAE,GAAG,EAAE,CAAC;AAClJ,EAAE,KAAK,CAAC;AACR,CAAC;AACD,CAAC,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK;AACxC,CAAC,KAAK,CAAC;AACP,CAAC,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,KAAK,EAAE,EAAE,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC;AACjI,CAAC,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,IAAI,EAAE,EAAE,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC;AAC7I,CAAC,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,IAAI,EAAE,EAAE,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC;AACjI,CAAC,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,EAAE,EAAE,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC;AAC/I,CAAC,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,IAAI,EAAE,EAAE,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,GAAG,EAAE,GAAG,EAAE,CAAC;AAClJ,CAAC,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,EAAE,EAAE,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC;AAChL,CAAC,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,iBAAiB,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,SAAS,IAAI,EAAE,EAAE,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,GAAG,EAAE,GAAG,EAAE,CAAC;AACvI,CAAC,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC,SAAS,IAAI,EAAE,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC;AAC1I,CAAC,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,SAAS,IAAI,EAAE,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC;AACvI,CAAC,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,IAAI,EAAE,EAAE,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,CAAC;AACzH,CAAC,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,KAAK,IAAI,EAAE,EAAE,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC;AACpH,CAAC,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,KAAK,IAAI,EAAE,EAAE,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC;AAC1H,CAAC,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,IAAI,EAAE,EAAE,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC;AACxH,CAAC,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,IAAI,EAAE,EAAE,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC;AAC9H,CAAC,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,iBAAiB,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,KAAK,IAAI,EAAE,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC;AAC7H,CAAC,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,eAAe,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,OAAO,IAAI,EAAE,EAAE,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,GAAG,EAAE,GAAG,EAAE,CAAC;AAC/H,EAAE,KAAK,CAAC;AACR,CAAC,EAAE;AACH;AACA,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;AACvC,CAAC,OAAO,CAAC,MAAM,EAAE,MAAM,GAAG,OAAO,EAAE,MAAM,EAAE,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;AAChE,EAAE,MAAM,CAAC,EAAE,EAAE,MAAM,GAAG,CAAC;AACvB,CAAC,GAAG,CAAC;AACL,CAAC;AACD;AACA,EAAE,CAAC,QAAQ,EAAE,MAAM,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,CAAC,UAAU,EAAE,CAAC,CAAC,YAAY,EAAE,CAAC,CAAC,YAAY,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,YAAY,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;AACpJ,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE;AACjB,IAAI;AACJ,IAAI,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,IAAI,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,YAAY,GAAG;AACpC;AACA,IAAI,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;AACjD,QAAQ,EAAE,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,OAAO,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;AACvG,QAAQ,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE;AAC9B,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;AAC/B,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG;AACnC,YAAY,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC;AAChC,YAAY,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC;AAChC,YAAY,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,WAAW,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK;AAChF,QAAQ,CAAC;AACT,QAAQ,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG;AAC5D,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG;AAChE,QAAQ,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;AAC7B,IAAI,CAAC;AACL,IAAI;AACJ,IAAI,QAAQ,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,UAAU;AAC5C,QAAQ,GAAG;AACX,SAAS,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,WAAW,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE;AACxF,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE;AACtF,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM;AACpE,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,OAAO;AAC3E,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU;AACnD,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,IAAI;AAC9E,SAAS,EAAE;AACX,QAAQ,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;AACvC,YAAY,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,YAAY,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC;AAClC,YAAY,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;AACjG,YAAY,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,EAAE;AACtC,YAAY,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,gBAAgB,OAAO,CAAC,GAAG,KAAK,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC,MAAM;AAClH,gBAAgB,MAAM,CAAC,GAAG;AAC1B,YAAY,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC;AACxF,gBAAgB,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,WAAW,CAAC,GAAG;AACrE,YAAY,CAAC;AACb,YAAY;AACZ,YAAY,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC;AACrC,YAAY,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,OAAO,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE;AAChE,YAAY,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;AAC9B,YAAY,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC;AAC9B,YAAY,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI;AACrE,YAAY,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;AACjD,YAAY,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;AAC3B,gBAAgB,IAAI,CAAC,CAAC,OAAO,EAAE,CAAC;AAChC,oBAAoB,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACtD,wBAAwB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;AACxD,wBAAwB,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7G,4BAA4B,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE;AAC3C,4BAA4B,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;AAC7C,wBAAwB,CAAC;AACzB,oBAAoB,CAAC;AACrB,oBAAoB,KAAK,CAAC;AAC1B,gBAAgB,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC;AACnC,gBAAgB,OAAO,CAAC,IAAI,EAAE,OAAO;AACrC,oBAAoB,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACtD,wBAAwB,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE,GAAG,EAAE;AACjH,wBAAwB,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;AACxC,4BAA4B,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;AAC/D,4BAA4B,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;AAC/D,wBAAwB,CAAC;AACzB,oBAAoB,CAAC;AACrB,YAAY,CAAC;AACb,YAAY,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;AAClC,gBAAgB,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;AAC5D,oBAAoB,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG;AACpD,oBAAoB,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG;AACpD,gBAAgB,CAAC,CAAC,IAAI,CAAC,CAAC;AACxB,oBAAoB,MAAM,CAAC,CAAC,CAAC,GAAG;AAChC,gBAAgB,CAAC;AACjB,YAAY,CAAC;AACb,YAAY,KAAK,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC;AACrC,YAAY,MAAM,CAAC,MAAM,CAAC;AAC1B,QAAQ,CAAC;AACT,IAAI;AACJ,QAAQ,GAAG;AACX,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AAC3F,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC;AACvG,SAAS,EAAE;AACX,QAAQ,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;AAChC,YAAY,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;AAC9B,YAAY,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;AAChE,YAAY,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;AACxB,YAAY,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;AAC3B,YAAY,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC;AAC9B,YAAY,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AAClD,gBAAgB,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,EAAE,GAAG,GAAG;AAC7D,gBAAgB,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;AACjC,oBAAoB,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;AAC5C,oBAAoB,CAAC,CAAC,EAAE,IAAI;AAC5B,gBAAgB,CAAC;AACjB,YAAY,CAAC;AACb,YAAY,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG;AAClD,YAAY,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;AACrE,YAAY,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,gBAAgB,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;AACrD,gBAAgB,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtD,gBAAgB,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,QAAQ,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClE,gBAAgB,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,QAAQ,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;AACjE,gBAAgB,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;AACzC,YAAY,GAAG;AACf,YAAY,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC;AAC7B,YAAY,MAAM,CAAC,MAAM,CAAC;AAC1B,QAAQ,CAAC;AACT,QAAQ;AACR,QAAQ,GAAG;AACX,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ;AAC1B,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS;AAC1B,SAAS,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM;AACzC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM;AAC7D,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,QAAQ;AAC/F,SAAS,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC;AAChE,SAAS,CAAC,CAAC,SAAS,CAAC,EAAE,KAAK,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG;AAC5D,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK;AACpC,SAAS,CAAC,CAAC,MAAM,CAAC,EAAE,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK;AACtD,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC;AAC7E,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM;AACxD,SAAS,CAAC,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC;AACxH,SAAS,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC;AACtH,SAAS,CAAC,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;AACpF,SAAS,EAAE;AACX,QAAQ,QAAQ,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;AAC5C,YAAY,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,MAAM,EAAE,YAAY;AAC7E,YAAY,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC;AAChG,YAAY,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AACzE,gBAAgB,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;AAC9C,gBAAgB,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;AAC9D,gBAAgB,MAAM,CAAC,SAAS,CAAC;AACjC,YAAY,GAAG;AACf,YAAY,MAAM,CAAC,MAAM,CAAC;AAC1B,QAAQ,CAAC,IAAI;AACb,QAAQ;AACR,QAAQ,GAAG;AACX,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ;AAC1B,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM;AACvB,SAAS,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM;AACzC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,QAAQ;AAC5F,SAAS,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC;AAChG,SAAS,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC;AACrD,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC;AAC7D,SAAS,CAAC,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC;AAChL,SAAS,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC;AACrD,SAAS,EAAE;AACX,QAAQ,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AACjC,YAAY,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,EAAE;AACrC,YAAY,OAAO,CAAC,IAAI,CAAC,GAAG,EAAE;AAC9B,YAAY,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;AACpC,QAAQ,CAAC,IAAI;AACb,QAAQ;AACR,QAAQ,GAAG;AACX,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ;AAC1B,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI;AACrB,SAAS,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM;AACzC,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC;AAC1F,SAAS,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC,MAAM,KAAK,CAAC;AAC1I,SAAS,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC;AACvD,SAAS,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;AAC9F,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AAC3J,SAAS,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG;AAC1G,SAAS,CAAC,CAAC,CAAC,WAAW;AACvB,SAAS,EAAE;AACX,QAAQ,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC;AACzB,YAAY,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,EAAE;AAC7C,YAAY,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE;AAC/C,YAAY,MAAM,CAAC,MAAM,CAAC;AAC1B,QAAQ,CAAC;AACT,YAAY;AACZ,QAAQ,GAAG;AACX,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM;AACxB,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI;AACrB,SAAS,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM;AACzC,SAAS,CAAC,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC;AAC1F,SAAS,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACnF,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;AACtD,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM;AAClE,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC;AAC9F,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,MAAM,EAAE,KAAK,GAAG;AACjD,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,IAAI,GAAG;AAC3B,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI;AAC3F,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM;AAC7C,SAAS,EAAE;AACX,QAAQ,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;AAC3C,YAAY,EAAE,CAAC,CAAC,IAAI,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;AAClD,YAAY,EAAE,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC;AAC7D,gBAAgB,OAAO,CAAC,GAAG,KAAK,CAAC,EAAE,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,IAAI,EAAE,CAAC,MAAM,CAAC,QAAQ,GAAG;AAC3E,gBAAgB,MAAM,CAAC;AACvB,YAAY,CAAC;AACb,YAAY,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;AACvB,gBAAgB,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG;AAC3C,gBAAgB,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACrD,oBAAoB,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG;AACpC,oBAAoB,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AAC5D,wBAAwB,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE;AACrD,oBAAoB,CAAC;AACrB,gBAAgB,CAAC;AACjB,YAAY,CAAC,CAAC,IAAI,CAAC,CAAC;AACpB,aAAa,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,GAAG;AACpD,YAAY,CAAC;AACb,YAAY,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC;AAC3B,YAAY,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG;AACnC,YAAY,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;AAC7D,YAAY,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AAChD,aAAa,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC;AACzE,cAAc,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC;AAC/D,YAAY,CAAC,CAAC;AACd,GAAG,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,aAAa,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;AACpD,iBAAiB,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,EAAE;AAC5I,iBAAiB,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE;AACnC,iBAAiB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG;AACxC,WAAW,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,KAAK;AACnC,WAAW,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,EAAE,gBAAgB;AAClD,aAAa,CAAC;AACd,SAAS,CAAC;AACV,YAAY,iBAAiB,GAAG;AAChC,YAAY,MAAM,CAAC,GAAG,CAAC;AACvB,QAAQ,CAAC;AACT,QAAQ;AACR,QAAQ,GAAG;AACX,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ;AAC1B,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK;AACtB,SAAS,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM;AACzC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,UAAU,CAAC;AAC1D,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AACzF,SAAS,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC;AACtF,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,CAAC;AACrF,SAAS,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,SAAS,CAAC;AACrH,SAAS,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC;AACrH,SAAS,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE;AACxC,SAAS,CAAC,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK;AACzG,SAAS,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE;AACtE,SAAS,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,UAAU;AACnC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC;AAChC,SAAS,CAAC,IAAI,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK;AACxD,SAAS,CAAC,IAAI,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM;AACzD,SAAS,CAAC,IAAI,EAAE,GAAG,CAAC;AACpB,SAAS,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,UAAU;AACjC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;AAC9B,SAAS,CAAC,IAAI,MAAM,QAAQ,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO;AAC9D,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK;AACzE,SAAS,CAAC,IAAI,EAAE,GAAG,CAAC;AACpB,SAAS,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,UAAU;AACjC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC;AAC/B,SAAS,CAAC,IAAI,QAAQ,EAAE,EAAE,CAAC,EAAE,CAAC,QAAQ,CAAC,SAAS,CAAC;AACjD,SAAS,CAAC,IAAI,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,SAAS,CAAC,WAAW,CAAC,EAAE,CAAC,UAAU;AACjE,SAAS,CAAC,IAAI,EAAE,GAAG,CAAC;AACpB,SAAS,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,UAAU;AACpC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;AAC7B,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,gBAAgB,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,OAAO,CAAC;AAC/E,SAAS,CAAC,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC,KAAK,SAAS,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,SAAS,CAAC,KAAK;AACxF,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC;AACpF,SAAS,CAAC,IAAI,EAAE,GAAG,CAAC;AACpB,SAAS,CAAC,IAAI,EAAE,CAAC,SAAS,CAAC,YAAY;AACvC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;AAC9B,SAAS,CAAC,IAAI,EAAE,EAAE,EAAE,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE,CAAC,IAAI;AACpE,SAAS,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI;AACtE,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,GAAG,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,KAAK;AACxE,SAAS,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI;AAC9E,SAAS,CAAC,IAAI,EAAE,GAAG,CAAC;AACpB,SAAS,CAAC,MAAM;AAChB,SAAS,CAAC,CAAC,CAAC,OAAO;AACnB,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,MAAM,EAAE;AACrC,cAAc,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE;AACtC,iBAAiB,CAAC,GAAG,CAAC,EAAE,CAAC,UAAU,EAAE,MAAM,EAAE;AAC7C,iBAAiB,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC;AAC9B,kBAAkB,CAAC,KAAK,CAAC;AACzB,sBAAsB,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,MAAM,IAAI,CAAC,IAAI,EAAE,CAAC;AACxE,mBAAmB,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,EAAE,GAAG,CAAC,EAAE,CAAC,IAAI,EAAE;AAC/C,wBAAwB,CAAC,EAAE,IAAI,KAAK,IAAI,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,MAAM,EAAE,KAAK,CAAC,EAAE,CAAC,GAAG,IAAI,KAAK,IAAI,EAAE,CAAC;AACtF,qBAAqB,EAAE,EAAE,CAAC;AAC1B,iBAAiB,EAAE,KAAK,CAAC;AACzB,iBAAiB,CAAC,EAAE,CAAC,OAAO,GAAG,EAAE,CAAC;AAClC,iBAAiB,CAAC,KAAK,CAAC;AACxB,oBAAoB,CAAC,EAAE,CAAC,WAAW,EAAE,EAAE,EAAE,EAAE,CAAC,KAAK,EAAE,EAAE,EAAE,EAAE,GAAG,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,SAAS,GAAG,MAAM,EAAE,EAAE,CAAC;AACnG,oBAAoB,CAAC,EAAE,EAAE,EAAE,CAAC,SAAS,CAAC,KAAK,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,KAAK,IAAI,IAAI,MAAM,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,KAAK,GAAG,SAAS,GAAG,MAAM,IAAI,EAAE,GAAG,EAAE,CAAC;AACxI,oBAAoB,CAAC,EAAE,EAAE,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,GAAG,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,KAAK,MAAM,IAAI,MAAM,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,KAAK,KAAK,SAAS,GAAG,MAAM,IAAI,EAAE,GAAG,EAAE,CAAC;AAC7I,oBAAoB,CAAC,EAAE,EAAE,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,GAAG,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,KAAK,MAAM,IAAI,MAAM,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,KAAK,KAAK,SAAS,GAAG,MAAM,IAAI,EAAE,GAAG,EAAE,CAAC;AAC9I,oBAAoB,CAAC,EAAE,EAAE,EAAE,CAAC,GAAG,CAAC,GAAG,GAAG,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,MAAM,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE,SAAS,GAAG,MAAM,IAAI,EAAE,GAAG,EAAE,CAAC;AACnI,oBAAoB,CAAC,EAAE,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,IAAI,MAAM,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,GAAG,SAAS,GAAG,MAAM,IAAI,EAAE,GAAG,EAAE,CAAC;AACvJ,oBAAoB,CAAC,EAAE,EAAE,EAAE,CAAC,MAAM,GAAG,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,KAAK,EAAE,IAAI,EAAE,KAAK,KAAK,IAAI,MAAM,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,KAAK,EAAE,IAAI,EAAE,KAAK,IAAI,SAAS,GAAG,MAAM,IAAI,EAAE,GAAG,EAAE,CAAC;AACzK,oBAAoB,CAAC,EAAE,EAAE,EAAE,CAAC,QAAQ,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,CAAC,IAAI,KAAK,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,KAAK,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,CAAC,IAAI,MAAM,IAAI,MAAM,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,KAAK,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,CAAC,IAAI,KAAK,SAAS,GAAG,MAAM,IAAI,EAAE,GAAG,EAAE,CAAC;AAC5M,oBAAoB,CAAC,EAAE,EAAE,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,KAAK,CAAC,GAAG,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,KAAK,CAAC,GAAG,IAAI,IAAI,MAAM,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,KAAK,CAAC,GAAG,GAAG,SAAS,GAAG,MAAM,IAAI,EAAE,GAAG,EAAE,CAAC;AACvM,oBAAoB,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,KAAK,CAAC,IAAI,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,MAAM,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,SAAS,GAAG,MAAM,IAAI,EAAE,GAAG,EAAE,CAAC;AAC1N,oBAAoB,CAAC,EAAE,EAAE,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,KAAK,CAAC,IAAI,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,MAAM,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,SAAS,GAAG,MAAM,IAAI,EAAE,GAAG,EAAE,CAAC;AAC9N,oBAAoB,CAAC,EAAE,EAAE,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,KAAK,CAAC,GAAG,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,MAAM,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,SAAS,GAAG,MAAM,IAAI,EAAE,GAAG,EAAE,CAAC;AAC3N,oBAAoB,CAAC,EAAE,EAAE,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,KAAK,CAAC,GAAG,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,MAAM,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,SAAS,GAAG,MAAM,IAAI,EAAE,GAAG,EAAE,CAAC;AAC3N,iBAAiB,EAAE,KAAK,CAAC;AACzB,iBAAiB,EAAE,GAAG,CAAC;AACvB,cAAc,EAAE,IAAI,CAAC;AACrB,cAAc,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,EAAE,EAAE;AACrC,iBAAiB,OAAO,CAAC,MAAM,EAAE,MAAM,GAAG,UAAU,EAAE,MAAM,EAAE,CAAC,QAAQ,CAAC,MAAM,EAAE,KAAK,EAAE;AACvF,oBAAoB,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG;AACjF,oBAAoB,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACnC,wBAAwB,EAAE,KAAK,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;AAChE,wBAAwB,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG;AAC9D,wBAAwB,EAAE,KAAK,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE;AACjE,wBAAwB,EAAE,IAAI,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;AAC9D,sBAAsB,EAAE;AACxB,oBAAoB,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,MAAM,KAAK,KAAK,CAAC,IAAI,GAAG;AACjE,oBAAoB,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,EAAE;AAC/D,iBAAiB,GAAG;AACpB,aAAa,EAAE,IAAI,CAAC;AACpB,aAAa,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,GAAG,EAAE;AACpC,gBAAgB,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;AACtC,gBAAgB,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AAC7C,gBAAgB,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC;AACrD,aAAa,EAAE,IAAI,CAAC;AACpB,YAAY,EAAE,OAAO,CAAC,KAAK;AAC3B,SAAS,EAAE;AACX,QAAQ,QAAQ,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC;AACpC,YAAY,GAAG,CAAC,CAAC;AACjB,gBAAgB,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG;AAC9B,gBAAgB,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AACvD,oBAAoB,EAAE,CAAC,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;AAC7F,gBAAgB,CAAC;AACjB,gBAAgB;AAChB,gBAAgB,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,EAAE;AACjD,gBAAgB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE;AAChD;AACA,gBAAgB,MAAM,CAAC,MAAM,CAAC;AAC9B,YAAY,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;AAC1B,gBAAgB,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE;AACjC,gBAAgB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,EAAE;AACvC,YAAY,CAAC;AACb,QAAQ,CAAC,EAAE;AACX,QAAQ;AACR,EAAE,GAAG;AACL,GAAG,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC;AACtF,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS;AAC9C,GAAG,EAAE,QAAQ;AACb,QAAQ,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AAChE,YAAY,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC;AACjC,YAAY,GAAG,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,UAAU;AAC1C,YAAY,EAAE,CAAC,CAAC,SAAS,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;AACvD,YAAY,EAAE,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AAC5E,YAAY,EAAE,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE;AAClD,gBAAgB,EAAE,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,QAAQ;AACjF,oBAAoB,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AAC5D,wBAAwB,EAAE,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,GAAG,CAAC,OAAO;AAClF,yBAAyB,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACvE,8BAA8B,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;AACzD,wBAAwB,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;AAC3E,yBAAyB,EAAE,CAAC,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK;AAClH,mBAAmB,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;AAC9C,wBAAwB,CAAC;AACzB,oBAAoB,CAAC;AACrB,gBAAgB,CAAC,CAAC,IAAI,CAAC,CAAC,SAAS,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM;AAC1D,oBAAoB,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE,CAAC,GAAG,CAAC;AACzG,oBAAoB,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC;AAC3C,oBAAoB,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC;AACjD,wBAAwB,EAAE,MAAM,CAAC,IAAI,IAAI,EAAE,EAAE,EAAE,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,cAAc,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;AACpH,wBAAwB,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,cAAc,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;AACpH,wBAAwB,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;AACtH,wBAAwB,IAAI,CAAC,CAAC;AAC9B,4BAA4B,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,EAAE;AACtD,4BAA4B,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,EAAE;AACtD,4BAA4B,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,QAAQ,GAAG;AACnE,4BAA4B,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,GAAG,SAAS,GAAG;AAC9F,4BAA4B,EAAE,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;AAC9C,gCAAgC,KAAK,CAAC,GAAG,CAAC,KAAK,EAAE,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE;AAC5G,4BAA4B,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,gCAAgC,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,SAAS,EAAE;AAC9E,4BAA4B,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AAC7C,gCAAgC,YAAY,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS;AACjG,gCAAgC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AAClE,oCAAoC,EAAE,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI;AAChI,gCAAgC,CAAC;AACjC,4BAA4B,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE;AACrG,gCAAgC,YAAY,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;AACzE,4BAA4B,CAAC;AAC7B,wBAAwB,CAAC;AACzB,wBAAwB,EAAE,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI;AACzG,4BAA4B,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE;AAC1E,oBAAoB,CAAC;AACrB,gBAAgB,CAAC,IAAI;AACrB,YAAY,CAAC;AACb,YAAY,MAAM,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,QAAQ,CAAC;AAC7C,QAAQ,CAAC;AACT;AACA,QAAQ;AACR,QAAQ,GAAG;AACX,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM;AACxB,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,cAAc;AACjC,SAAS,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM;AACzC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AAChF,SAAS,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC;AACnD,SAAS,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC;AAC7D,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AAC/E,SAAS,CAAC,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,SAAS,CAAC;AAC3F,SAAS,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,CAAC,OAAO,EAAE,GAAG,CAAC;AACjE,SAAS,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,GAAG;AAC3C,SAAS,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,GAAG,WAAW,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC;AAC7D,SAAS,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,OAAO,GAAG,EAAE,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC;AACxD,SAAS,EAAE;AACX,QAAQ,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACxC,SAAS,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,GAAG;AACzC,SAAS,MAAM,CAAC,MAAM,CAAC,CAAC;AACxB,QAAQ,CAAC;AACT,QAAQ;AACR,QAAQ,GAAG;AACX,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM;AACxB,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,SAAS;AAC5B,SAAS,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM;AACzC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;AACxF,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC;AACnE,SAAS,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,QAAQ;AAC7D,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC;AAC1H,SAAS,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC;AACjF,SAAS,CAAC,CAAC,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;AAChD,SAAS,EAAE;AACX,QAAQ,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;AACjC,SAAS,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;AACnD,SAAS,IAAI,CAAC,CAAC;AACf,gBAAgB,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,EAAE;AACrC,gBAAgB,IAAI,CAAC,GAAG,EAAE;AAC1B,gBAAgB,SAAS,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE;AACrC,gBAAgB,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,WAAW;AAC3C,gBAAgB,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;AACrF,gBAAgB,MAAM,CAAC,MAAM,CAAC;AAC9B,SAAS,CAAC;AACV,QAAQ,CAAC,CAAC;AACV,QAAQ;AACR,SAAS,GAAG;AACZ,UAAU,CAAC,CAAC,QAAQ,CAAC,QAAQ;AAC7B,UAAU,EAAE;AACZ,SAAS,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;AAClC,UAAU,EAAE,CAAC,EAAE,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;AACrD,UAAU,KAAK,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC;AAC1C,UAAU,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE;AACjC,SAAS,CAAC,CAAC;AACX;AACA,QAAQ,GAAG;AACX,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ;AAC1B,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO;AACxB,SAAS,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM;AACzC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC;AAC1G,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC;AAC3D,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,SAAS,CAAC;AACzI,SAAS,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC7F,SAAS,EAAE;AACX,QAAQ,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;AACxC,YAAY,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;AAC9B,YAAY,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;AACzC,YAAY,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AAC3B,gBAAgB,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,EAAE;AAC1C,gBAAgB,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;AACzC,gBAAgB,KAAK,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC;AAC5C,gBAAgB,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;AAC/B,gBAAgB,MAAM,CAAC,GAAG,CAAC;AAC3B,YAAY,CAAC;AACb,YAAY,MAAM,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,EAAE,IAAI,CAAC;AACzC,QAAQ,CAAC;AACT,QAAQ;AACR,QAAQ,GAAG;AACX,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ;AAC1B,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS;AAC1B,SAAS,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM;AACzC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC;AAChF,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC;AAClE,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK;AAChG,SAAS,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAC;AACxH,SAAS,EAAE;AACX,QAAQ,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;AAC5C,YAAY,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;AAC9B,YAAY,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;AACzC,YAAY,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;AAC5B,gBAAgB,QAAQ,CAAC,GAAG,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC;AACpD,gBAAgB,QAAQ,CAAC,GAAG,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC;AAC/C,YAAY,CAAC;AACb,YAAY,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE;AACxC,QAAQ,CAAC;AACT,QAAQ;AACR,QAAQ,GAAG;AACX,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ;AAC1B,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS;AAC1B,SAAS,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM;AACzC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AACvF,SAAS,CAAC,CAAC,CAAC,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;AAC1E,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;AAClD,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,SAAS,EAAE;AAC7D,SAAS,EAAE;AACX,QAAQ,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;AACjC,YAAY,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;AAC9B,YAAY,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;AACzC,YAAY,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;AAC/B,YAAY,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;AAC7B,QAAQ,CAAC;AACT,QAAQ;AACR,QAAQ,GAAG;AACX,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ;AAC1B,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO;AACxB,SAAS,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM;AACzC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;AACjI,SAAS,CAAC,CAAC,CAAC,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC;AAC9E,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC;AAC1H,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,SAAS,EAAE;AAC1B,SAAS,EAAE;AACX,QAAQ,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;AACjC,YAAY,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC;AACpC,gBAAgB,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG;AAC/B,gBAAgB,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACpD,oBAAoB,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC;AAC7C,gBAAgB,CAAC;AACjB,gBAAgB,MAAM,CAAC,KAAK,CAAC;AAC7B,YAAY,CAAC,CAAC,IAAI,CAAC,CAAC;AACpB,gBAAgB,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;AAClC,aAAa,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;AAC1C,aAAa,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;AAChC,aAAa,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC;AAC3B,YAAY,CAAC;AACb,QAAQ,CAAC;AACT,QAAQ;AACR,QAAQ,QAAQ,CAAC,iBAAiB,EAAE,CAAC,CAAC;AACtC,YAAY,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;AAC/E,QAAQ,CAAC;AACT,QAAQ;AACR,QAAQ,GAAG,CAAC;AACZ,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ;AAC1B,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM;AACvB,SAAS,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM;AACzC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;AAClG,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;AACrG,SAAS,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC;AACjD,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,EAAE;AACjE,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,EAAE;AAC5E,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC;AAC7E,SAAS,CAAC,CAAC,CAAC,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,SAAS,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC;AAC9G,SAAS,CAAC,CAAC,SAAS,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC;AAC9H,SAAS,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC;AACnC,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC;AACpC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC;AAC3G,SAAS,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,UAAU,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,EAAE,EAAE,CAAC;AAC1H,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,IAAI;AAClF,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC;AACrC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM;AAC1G,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,UAAU,EAAE,EAAE,CAAC;AAC7E,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI;AACjF,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI;AACvB,SAAS,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,CAAC,UAAU,CAAC,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC;AACjJ,SAAS,EAAE;AACX,QAAQ,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;AACzC,YAAY,EAAE,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;AAC5C,EAAE,aAAa,UAAU,EAAE,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,GAAG;AACtE,gBAAgB,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC;AAChC,gBAAgB,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,SAAS,EAAE;AAClE,gBAAgB,iBAAiB,GAAG;AACpC,YAAY,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,QAAQ,IAAI;AACrH,aAAa,UAAU,EAAE,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,GAAG;AACnE,gBAAgB,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,EAAE;AACrC,gBAAgB,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;AACvE,oBAAoB,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,GAAG;AAChD,gBAAgB,GAAG;AACnB,YAAY,CAAC,CAAC,IAAI,CAAC,CAAC;AACpB,gBAAgB,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC;AAChC,gBAAgB,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG;AAChC,gBAAgB,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AACvD,iBAAiB,EAAE,CAAC,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;AAC3F,aAAa,CAAC;AACd,gBAAgB,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC;AAC/C,gBAAgB,iBAAiB,GAAG;AACpC,YAAY,CAAC;AACb,YAAY,MAAM,CAAC,GAAG,CAAC;AACvB,QAAQ,CAAC;AACT,QAAQ;AACR,QAAQ,GAAG;AACX,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ;AAC1B,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI;AACrB,SAAS,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM;AACzC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;AAC9E,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;AACrF,SAAS,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC;AACnF,SAAS,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC;AACvE,SAAS,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC;AACxF,WAAW,CAAC,KAAK,CAAC;AAClB,UAAU,CAAC,EAAE,EAAE,EAAE,GAAG,SAAS,IAAI,EAAE,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,KAAK,GAAG,EAAE,GAAG,EAAE,CAAC;AAC1E,UAAU,CAAC,EAAE,EAAE,EAAE,GAAG,UAAU,IAAI,EAAE,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,KAAK,GAAG,EAAE,GAAG,EAAE,CAAC;AAC3E,WAAW,EAAE,KAAK,CAAC;AACnB,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC;AAC7E,SAAS,CAAC,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC;AACtF,SAAS,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;AAC9D,SAAS,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC;AACnC,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI;AACvB,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC;AAC3F,SAAS,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,UAAU,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,EAAE,EAAE,CAAC;AAC3F,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,IAAI;AAC1E,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI;AACxB,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM;AAC1G,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,UAAU,EAAE,EAAE,CAAC;AAC1E,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,GAAG,EAAE,CAAC;AACnF,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI;AAC7E,SAAS,EAAE;AACX,QAAQ,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,YAAY;AAChD,SAAS,QAAQ,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrD,SAAS,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpD,SAAS,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AACrE,SAAS,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AACpE;AACA,YAAY,EAAE,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;AAC5C,gBAAgB,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC;AAC7B,gBAAgB,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE;AACrC,YAAY,CAAC,CAAC,IAAI,CAAC,CAAC;AACpB,gBAAgB,IAAI,CAAC,GAAG,EAAE;AAC1B,gBAAgB,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,EAAE;AACrC,gBAAgB,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE;AACrC,gBAAgB,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC;AACjD,oBAAoB,EAAE,CAAC,CAAC,MAAM,IAAI,UAAU,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,OAAO,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;AACxG,oBAAoB,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,IAAI,SAAS,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,OAAO,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;AAC1G,oBAAoB,IAAI,CAAC,CAAC;AAC1B,wBAAwB,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC,UAAU,CAAC,IAAI,GAAG;AACpH,wBAAwB,MAAM,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;AAC7C,oBAAoB,CAAC;AACrB,gBAAgB,CAAC;AACjB,gBAAgB,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACpD,oBAAoB,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC;AACzD,gBAAgB,GAAG;AACnB,YAAY,CAAC;AACb,YAAY,MAAM,CAAC,GAAG,CAAC;AACvB,QAAQ,CAAC;AACT,QAAQ;AACR,QAAQ,GAAG,CAAC;AACZ,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ;AAC1B,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG;AACpB,SAAS,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM;AACzC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;AACnF,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;AACjF,SAAS,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,IAAI,EAAE,CAAC;AACrF,SAAS,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC;AACxF,SAAS,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC;AACxF,WAAW,CAAC,KAAK,CAAC;AAClB,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,QAAQ,GAAG,EAAE,EAAE,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,OAAO,GAAG,EAAE,GAAG,EAAE,CAAC;AACzH,WAAW,EAAE,KAAK,CAAC;AACnB,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC;AAC7E,SAAS,CAAC,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC;AAC9E,SAAS,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC;AAC3F,SAAS,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC;AACnC,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI;AACvB,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC;AAC9F,SAAS,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,UAAU,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,EAAE,GAAG,CAAC;AAC7F,SAAS,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;AACtC,SAAS,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC;AACjD,SAAS,CAAC,IAAI,MAAM,CAAC,MAAM,CAAC,CAAC;AAC7B,SAAS,CAAC,CAAC,KAAK,GAAG,CAAC;AACpB,SAAS,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC;AAC5D,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI;AACxB,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM;AAC1G,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,EAAE,GAAG,CAAC;AAChH,SAAS,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AAC1D,SAAS,CAAC,IAAI,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,SAAS,CAAC,CAAC,KAAK,GAAG,CAAC;AACpB,SAAS,EAAE;AACX,QAAQ,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;AAClC,YAAY,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;AAC9C,YAAY,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG;AAChG,YAAY;AACZ,YAAY,EAAE,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;AAC5C,gBAAgB,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC;AAC5B,gBAAgB,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE;AAC3D,gBAAgB,iBAAiB,GAAG;AACpC,YAAY,CAAC,CAAC,IAAI,CAAC,CAAC;AACpB,gBAAgB,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,EAAE;AACrC,gBAAgB,EAAE,CAAC,CAAC,KAAK,IAAI,QAAQ,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC;AAC/D,gBAAgB,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,IAAI,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;AAC1D,gBAAgB,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;AACxD,iBAAiB,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,GAAG;AACzG,iBAAiB,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE;AAChC,gBAAgB,CAAC;AACjB;AACA,gBAAgB,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;AACjF,oBAAoB,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;AAChD,oBAAoB,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC;AACpE,oBAAoB,MAAM,CAAC,OAAO,CAAC;AACnC,gBAAgB,GAAG;AACnB,gBAAgB,KAAK,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;AAC/C,YAAY,CAAC;AACb,YAAY,MAAM,CAAC,GAAG,CAAC;AACvB,QAAQ,CAAC;AACT,QAAQ;AACR,QAAQ,GAAG;AACX,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM;AACxB,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,IAAI;AACvB,SAAS,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM;AACzC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC;AAC5G,SAAS,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC;AACpE,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC;AAClG,SAAS,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,SAAS,CAAC;AAC1C,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC;AAC5F,SAAS,CAAC,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;AAC3E,SAAS,EAAE;AACX,QAAQ,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;AAClC,YAAY,GAAG,CAAC,CAAC,CAAC;AAClB,YAAY,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;AACnC,gBAAgB,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AACvE,gBAAgB,IAAI,CAAC,SAAS,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;AAClD,gBAAgB,SAAS,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE;AACrC,YAAY,CAAC;AACb,YAAY,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC;AACpC,gBAAgB,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AAChD,oBAAoB,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;AAC1C,oBAAoB,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE;AACvC,gBAAgB,CAAC;AACjB,YAAY,CAAC,CAAC,IAAI,CAAC,CAAC;AACpB,gBAAgB,EAAE,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;AAC3C,oBAAoB,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AACrE,gBAAgB,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;AACzB,oBAAoB,OAAO,CAAC,GAAG,EAAE,CAAC;AAClC,gBAAgB,CAAC;AACjB,YAAY,CAAC;AACb,QAAQ,CAAC;AACT,QAAQ;AACR,KAAK,GAAG;AACR,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ;AACvB,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI;AAClB,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM;AACtC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,GAAG;AAC1F,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI;AACvB,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;AAClB,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,GAAG,CAAC,OAAO,EAAE,OAAO,CAAC,QAAQ,EAAE,KAAK,CAAC,QAAQ,EAAE;AACpG,MAAM,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC;AACrH,MAAM,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;AAC1G,MAAM,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;AAC9E,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC;AACtE,MAAM,EAAE;AACR,QAAQ,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AAC7B,GAAG,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC;AAChD,IAAI,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AAC/B,KAAK,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE;AACxD,IAAI,EAAE;AACN,IAAI,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AAC/B,KAAK,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,EAAE;AAC7E,IAAI,CAAC;AACL,GAAG,EAAE;AACL,MAAM,CAAC;AACP,QAAQ;AACR,QAAQ,GAAG,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,MAAM,CAAC;AAC9C,QAAQ,GAAG,CAAC,KAAK,CAAC,CAAC;AACnB,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,GAAG;AACzC,QAAQ,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,cAAc,CAAC;AAC5C,QAAQ,GAAG;AACX,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM;AACxB,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG;AACpB,SAAS,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM;AAC3C,SAAS,CAAC,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU;AAC9D,SAAS,EAAE;AACX,QAAQ,GAAG,CAAC,GAAG,SAAS,CAAC,CAAC,OAAO,CAAC;AAClC,QAAQ,GAAG,CAAC,IAAI,QAAQ,CAAC,CAAC,IAAI,CAAC,KAAK;AACpC,QAAQ,GAAG,CAAC,IAAI,QAAQ,CAAC,CAAC,IAAI,CAAC,KAAK;AACpC,QAAQ,GAAG,CAAC,IAAI,QAAQ,CAAC,CAAC,IAAI,CAAC,KAAK;AACpC,QAAQ,GAAG,CAAC,SAAS,GAAG,CAAC,CAAC,SAAS,CAAC;AACpC,QAAQ,GAAG,CAAC,MAAM,KAAK,CAAC,CAAC,MAAM,CAAC;AAChC,QAAQ,GAAG,CAAC,KAAK,OAAO,CAAC,CAAC,KAAK,CAAC,IAAI;AACpC,QAAQ,GAAG,CAAC,OAAO,KAAK,CAAC,CAAC,OAAO,CAAC,KAAK;AACvC,QAAQ,GAAG,CAAC,SAAS,GAAG,CAAC,CAAC,SAAS,CAAC,GAAG;AACvC,QAAQ,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC;AAClC,QAAQ,GAAG,CAAC,SAAS,GAAG,CAAC,CAAC,SAAS,CAAC,GAAG;AACvC,QAAQ,GAAG,CAAC,OAAO,KAAK,CAAC,CAAC,OAAO,CAAC,KAAK;AACvC,QAAQ,GAAG,CAAC,MAAM,MAAM,CAAC,CAAC,MAAM,CAAC,GAAG;AACpC,QAAQ,GAAG,CAAC,IAAI,QAAQ,CAAC,CAAC,IAAI,CAAC,KAAK;AACpC,QAAQ,GAAG,CAAC,GAAG,SAAS,CAAC,CAAC,GAAG,CAAC,MAAM;AACpC,QAAQ,GAAG,CAAC,IAAI,QAAQ,CAAC,CAAC,IAAI,CAAC,KAAK;AACpC,QAAQ,GAAG,CAAC,EAAE,UAAU,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,EAAE;AACtD,QAAQ,MAAM,GAAG;AACjB,EAAE,QAAQ,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE;AACtE,QAAQ,MAAM,CAAC,GAAG,CAAC;AACnB,IAAI,CAAC;AACL,KAAK;AACL,IAAI,MAAM,CAAC,UAAU,CAAC;AACtB,IAAI;;AC52BJ,GAAG;AACH,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO;AACjB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY;AAC5B,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM;AACjC,CAAC,CAAC,CAAC,CAAC,WAAW;AACf,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;AACtG,CAAC,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC;AAC1D,CAAC,EAAE;AACH,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,EAAE,MAAM,GAAG,OAAO,EAAE,YAAY,EAAE,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,EAAE,YAAY,GAAG,CAAC,GAAG,CAAC,CAAC;AAClJ,CAAC;AACD,EAAE,CAAC,QAAQ,EAAE,YAAY,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,QAAQ,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,CAAC;AAC7E,CAAC,CAAC,GAAG,CAAC,MAAM,EAAE;AACd,CAAC;AACD,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,MAAM,CAAC,KAAK;AAChD,CAAC;AACD,CAAC,QAAQ,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC;AAC7B,QAAQ,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,GAAG,KAAK,IAAI;AACvC,QAAQ,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,GAAG,kBAAkB,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;AAC/E,CAAC,CAAC;AACF,CAAC;AACD,CAAC,GAAG,CAAC;AACL,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM;AACpB,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,IAAI;AACnB,KAAK,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAY;AACpC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI;AAC/C,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC;AAC/C,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC;AACzF,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC;AACtF,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC;AACxE,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM;AAC7D,EAAE,EAAE;AACJ,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;AAC9B,EAAE,EAAE,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;AACxC,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;AAC/D,IAAI,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG;AACvC,IAAI,EAAE,CAAC,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,QAAQ,GAAG,CAAC,CAAC;AAC3D,IAAI;AACJ,IAAI,EAAE,CAAC,OAAO,CAAC,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,GAAG;AACxC,aAAa,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,YAAY,CAAC,MAAM,EAAE;AAChD,aAAa;AACb,aAAa,EAAE,CAAC,OAAO,CAAC,IAAI;AAC5B,aAAa,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;AAC/D,iBAAiB,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY;AAC9C,iBAAiB,OAAO,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,OAAO,GAAG,mBAAmB;AAC7E,aAAa,GAAG,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;AACpD,cAAc,MAAM,EAAE,EAAE,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE;AACjG,aAAa,GAAG;AAChB,GAAG,GAAG,CAAC;AACP,EAAE,CAAC;AACH,EAAE,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE;AAC1B,CAAC,CAAC;AACF,KAAK;AACL,IAAI,GAAG;AACP,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM;AACpB,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,gBAAgB;AAC/B,KAAK,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAY;AACpC,KAAK,CAAC,CAAC,CAAC,UAAU;AAClB,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM;AACrE,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC;AACvE,KAAK,CAAC,CAAC,CAAC,WAAW,CAAC,EAAE,UAAU,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;AACpD,KAAK,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC;AAC7E,KAAK,CAAC,CAAC;AACP,KAAK,EAAE;AACP,IAAI,QAAQ,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM;AAC3C,EAAE,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;AACrC,MAAM,EAAE,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,OAAO,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;AACrG,MAAM,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC;AAChG,MAAM,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,uCAAuC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK;AACpG,MAAM,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;AAC3B,EAAE,CAAC;AACH,QAAQ,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC;AAC1G,QAAQ,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,gBAAgB,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,SAAS;AACtG,QAAQ,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,OAAO,MAAM,CAAC;AAChD,QAAQ,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,OAAO,MAAM,CAAC;AAChD,QAAQ,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC;AAC7B,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,CAAC;AACxD,QAAQ,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,CAAC;AACxD,qBAAqB,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;AAC3D;AACA,QAAQ,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM;AACzC,QAAQ,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,IAAI,CAAC,IAAI,GAAG,CAAC,EAAE;AAC5C,QAAQ,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,+BAA+B,EAAE,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG;AAC/G,QAAQ,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACvC,YAAY,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,MAAM;AACtC,YAAY,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,gCAAgC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO;AACrF,gBAAgB,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AAChD,oBAAoB,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;AAC5D,oBAAoB,IAAI,EAAE,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC,CAAC,CAAC;AACtE,gBAAgB,CAAC;AACjB,YAAY,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM;AAC1G,gBAAgB,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,GAAG,CAAC,CAAC;AAC3E,gBAAgB,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC;AAC/C,gBAAgB,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;AACvF,gBAAgB,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,eAAe,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO;AACjF,YAAY,CAAC;AACb,QAAQ,CAAC;AACT,QAAQ,MAAM,CAAC,MAAM,CAAC;AACtB,IAAI,CAAC;AACL,OAAO;AACP,KAAK,GAAG;AACR,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM;AACpB,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,SAAS;AACxB,KAAK,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAY;AACpC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM;AAC/E,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC;AAClC,KAAK,CAAC,CAAC,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM;AACjF,KAAK,EAAE;AACP,IAAI,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG;AACnC,KAAK,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,GAAG,GAAG,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK;AAC7D,KAAK,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,GAAG,SAAS,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM;AACjE,KAAK,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG;AACrB,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;AAC1E,KAAK,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;AACpB,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACpC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AAC/E,SAAS,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;AACxB,KAAK,CAAC;AACN,KAAK,MAAM,CAAC,MAAM,CAAC;AACnB,IAAI,CAAC;AACL,IAAI;AACJ,IAAI;AACJ,CAAC,MAAM,CAAC,CAAC,CAAC;AACV,KAAK,IAAI,CAAC,OAAO,IAAI,CAAC;AACtB,EAAE,gBAAgB,CAAC,EAAE,gBAAgB,CAAC;AACtC,KAAK,SAAS,CAAC,IAAI,SAAS;AAC5B,CAAC,EAAE;AACH,IAAI;AACJ;AACA;;ACjIA,GAAG;AACH,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO;AACjB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU;AAC1B,CAAC,CAAC,CAAC,CAAC,WAAW;AACf,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;AAC/E,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,cAAc,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;AAChE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,iBAAiB,CAAC,SAAS,CAAC;AAC7D,CAAC,EAAE;AACH;AACA,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;AACvC,CAAC,OAAO,CAAC,MAAM,EAAE,MAAM,GAAG,OAAO,EAAE,UAAU,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;AAC7D,EAAE,MAAM,CAAC,EAAE,EAAE,UAAU,GAAG,CAAC;AAC3B,CAAC,GAAG,CAAC;AACL,CAAC;AACD;AACA,EAAE,CAAC,QAAQ,EAAE,UAAU,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC;AACtC,IAAI,GAAG;AACP,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM;AACpB,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,MAAM;AACrB,KAAK,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU;AAClC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI;AAC1D,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,OAAO,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;AACnG,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE;AAC3D,KAAK,CAAC,CAAC,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC;AACjG,KAAK,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE,CAAC,KAAK,CAAC;AACxF,KAAK,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC;AAC9F,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;AACnF,KAAK,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,WAAW,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC;AAC9E,KAAK,EAAE;AACP,IAAI,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;AACrC,QAAQ,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,EAAE,CAAC,IAAI,CAAC;AACtC,QAAQ,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;AACvC,QAAQ,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE;AAC9B,YAAY,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,GAAG,eAAe,EAAE,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,UAAU,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO;AAC/G,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;AACtG,QAAQ,MAAM,CAAC,CAAC,CAAC;AACjB,IAAI,CAAC;AACL;AACA,IAAI,GAAG;AACP,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM;AACpB,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,QAAQ;AACvB,KAAK,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU;AAClC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;AACxH,KAAK,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC;AACtE,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC;AAC/C,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AACjD,KAAK,CAAC,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC;AAChE,KAAK,EAAE;AACP,IAAI,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;AACrC,QAAQ,GAAG,CAAC,CAAC,CAAC;AACd,QAAQ,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;AACvB,YAAY,IAAI,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,EAAE;AAC/C,4BAA4B,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;AACjE,4BAA4B,KAAK,CAAC;AAClC,YAAY,IAAI,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,EAAE,GAAG,CAAC;AACvD,4BAA4B,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;AACvD,4BAA4B,KAAK,CAAC;AAClC,YAAY,IAAI,CAAC,CAAC,QAAQ,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM;AAC9E,gBAAgB,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,IAAI,EAAE,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,gBAAgB;AAClH,gBAAgB,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE;AACnC,YAAY,IAAI,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC;AACpD,4BAA4B,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;AACvD,4BAA4B,KAAK,CAAC;AAClC,YAAY,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC;AAC1C,QAAQ,CAAC;AACT,QAAQ,MAAM,CAAC,CAAC,CAAC;AACjB,KAAK,CAAC;AACN,KAAK;AACL,IAAI,GAAG;AACP,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM;AACpB,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO;AACtB,KAAK,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU;AAClC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC;AAC/B,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,aAAa,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM;AACpG,KAAK,CAAC,CAAC,CAAC,WAAW,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;AACvE,KAAK,CAAC,CAAC,CAAC,IAAI,EAAE,IAAI,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC;AAChF,KAAK,CAAC,CAAC,CAAC,IAAI,EAAE,IAAI,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM;AACjD,KAAK,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC;AAChF,KAAK,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC,KAAK;AAC5E,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC;AACb,KAAK,EAAE;AACP,IAAI,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;AAC9B,QAAQ,EAAE,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;AACpC,YAAY,EAAE,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC;AAC3F,YAAY,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,SAAS,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;AAC3D,YAAY,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,QAAQ,CAAC,CAAC,CAAC,CAAC;AAC1C,aAAa,EAAE,CAAC,EAAE,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;AAC5E,YAAY,CAAC;AACb;AACA,YAAY,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,EAAE;AACnC,YAAY,EAAE,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK;AAChE,gBAAgB,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;AAChC,oBAAoB,EAAE,CAAC,CAAC,CAAC,CAAC,WAAW,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;AAChE,gBAAgB,CAAC,CAAC;AAClB,YAAY,CAAC;AACb;AACA,YAAY,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;AAC9C,gBAAgB,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9D,oBAAoB,EAAE,CAAC,EAAE,KAAK,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC;AACzE,gBAAgB,CAAC;AACjB,gBAAgB,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAC9D,oBAAoB,EAAE,CAAC,EAAE,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,GAAG,OAAO,IAAI,EAAE,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,OAAO,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;AACjI,gBAAgB,CAAC;AACjB,gBAAgB,MAAM,CAAC,CAAC,MAAM,CAAC,WAAW,GAAG,CAAC,CAAC;AAC/C,oBAAoB,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC;AACvC,oBAAoB,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,KAAK,CAAC;AACxC,oBAAoB,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC;AACvE,gBAAgB,CAAC;AACjB,YAAY,CAAC;AACb,QAAQ,CAAC;AACT,QAAQ,MAAM,CAAC,IAAI,CAAC;AACpB,IAAI,CAAC,IAAI;AACT,IAAI,MAAM,CAAC,CAAC;AACZ,QAAQ,MAAM,CAAC,KAAK,MAAM,CAAC;AAC3B,QAAQ,QAAQ,CAAC,GAAG,QAAQ,CAAC;AAC7B,QAAQ,OAAO,CAAC,IAAI,OAAO;AAC3B,IAAI,EAAE;AACN,GAAG;;ACrHH,GAAG;AACH,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ;AAClB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK;AACd,CAAC,CAAC,CAAC,CAAC,WAAW;AACf,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC,MAAM;AACT,CAAC,CAAC,CAAC,MAAM;AACT,CAAC,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;AAC3E,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,SAAS,CAAC;AAC3F,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;AAC5F,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,GAAG,CAAC,cAAc,CAAC,MAAM,CAAC;AAChF,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC,QAAQ;AACX,CAAC,CAAC,CAAC,QAAQ;AACX,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC;AAC5G,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;AACzG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC;AAC3G,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC,YAAY;AACf,CAAC,CAAC,CAAC,YAAY;AACf,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAC9E,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO;AACpD,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AACvC,CAAC,CAAC,IAAI,OAAO,CAAC,OAAO,CAAC,YAAY,CAAC,QAAQ,CAAC;AAC5C,CAAC,CAAC,IAAI;AACN,CAAC,EAAE","file":"hsData.min.js","sourcesContent":["\nif (typeof(angular) !== 'undefined') { angular.module('hsData', []); }","/**\n * @ngdoc overview\n * @name hsData\n * @description\n * \n * {@link hsData.object.HsData HsData}\n * =============\n * Provides convenience functions to access in-memory data sets.\n */\n\n\t\n/**\n * @ngdoc object\n * @name hsData.object.HsData\n * @requires hs.object.HsObject\n * @requires hsData.hsDataType\n * @example\n<example module=\"hsData\">\n  <file name=\"index.html\">\n     <div ng-controller=\"myDataCtrl\">\n     <h1>Data</h1>\n     \t<table>\n     \t    <th>Row</th><th ng-repeat=\"h in header\">{{h}}</th>\n  \t \t \t<tr ng-repeat=\"row in data\">\n  \t \t       <td>{{$index}}</td><td ng-repeat=\"field in row\">{{field}}</td>\n  \t \t    </tr>\n  \t \t</table>\n  \t \tdb('Name') = {{db('Name')}}<br>\n  \t \tdb.sort('Name', 'ascending')('Name') = {{db.sort('Name', 'ascending')('Name')}}<br>\n  \t \tdb('Value') = {{db('Value')}}\n     </div>\n  </file>\n  <file name=\"script.js\">\n     angular.module('hsData').controller('myDataCtrl', function myCtrl($scope){\n        $scope.header = ['Name', 'Value', 'Entry Date', 'Exit Date'];\n        $scope.data = [\n            ['Harry', '100', '3/1/14', '11/20/14'], \n            ['Mary', '1500', '7/1/14', '9/30/14'],\n            ['Peter', '400', '5/20/14', '4/30/15'],  \n            ['Jane', '700', '11/13/14', '8/15/15']\n          ];\n        $scope.db = (new hs('HsData'))('local data');\n        $scope.db.data($scope.data, $scope.header);\n     });\n </file>\n</example>\n * @description\n * Provides an object with convenience functions to access in-memory data sets. Internally, \n * the data is stored in a simple row-based model using a 2D array [row][column]. \n * \n * Column values can be accessed by calling the outer function on the HsData object, \n * see {@link hsData.object.HsData#example_data_demo example below}.\n * \n * Columns carry the following meta information: <pre>\n * gMeta[c] = {\n *    name:     string  unique identifier for each column\n *    column:   int     the column index\n *    cast:     boolean whether the colNumber data has been cast yet or not\n *    accessed: boolean whether the column has been accessed (and hence should be cast)\n *    types:    array   describing the possible field types for the column\n *       [{\n *       type:  string  either 'date', 'real', 'percent', or 'nominal'\n *       count: number of fields in column for which type is plausible\n *       domain:range of field values for the type\n *       }]\n * }\n * </pre>\n ## Information Functions\n<table>\n<tr><td>{@link hsData.object.HsData#methods_colvalues colValues(col)}</td><td>returns the array of column data in the series;</td></tr>\n<tr><td>{@link hsData.object.HsData#methods_colnumber colNumber(col)}</td><td>returns the column index of the specified column.</td></tr>\n<tr><td>{@link hsData.object.HsData#methods_copy copy()}</td><td>returns a new HsData object representing a copy of the current object.</td></tr>\n<tr><td>{@link hsData.object.HsData#methods_coldomain colDomain(col)}</td><td>returns the data domain for the column.</td></tr>\n<tr><td>{@link hsData.object.HsData#methods_colname colName()}</td><td>returns all column names.</td></tr>\n<tr><td>{@link hsData.object.HsData#methods_colname colName(col)}</td><td>returns the specified column name.</td></tr>\n<tr><td>{@link hsData.object.HsData#methods_coltype colType(col)}</td><td>returns the data type for the column.</td></tr>\n<tr><td>{@link hsData.object.HsData#methods_query query(conditions)}</td><td>returns an array of rows satisfying each of the conditions.</td></tr>\n</table>\n \n ## Functions that change internal state\n<table>\n<tr><td>{@link hsData.object.HsData#methods_cast cast()}</td><td>casts all columns of values to their predominant type.</td></tr>\n<tr><td>{@link hsData.object.HsData#methods_cast cast(col)}</td><td>casts the specified column of values to their predominant type.</td></tr>\n<tr><td>{@link hsData.object.HsData#methods_cast cast(type)}</td><td>casts all columns of values to the specified type.</td></tr>\n<tr><td>{@link hsData.object.HsData#methods_cast cast(col, type)}</td><td>casts the specified column of values to the specified type.</td></tr>\n<tr><td>{@link hsData.object.HsData#methods_data data(values, meta)}</td><td>sets the values and meta information for the HsData object.</td></tr>\n<tr><td>{@link hsData.object.HsData#methods_data data(values, meta, deep)}</td><td>sets the values and meta information for the HsData object by creating a deep copy.</td></tr>\n<tr><td>{@link hsData.object.HsData#methods_coldomain colDomain(col, newDomain)}</td><td>sets the data domain for the column.</td></tr>\n<tr><td>{@link hsData.object.HsData#methods_filter filter(filterObj)}</td><td>Filters the rows of values in array or query mode.</td></tr>\n<tr><td>{@link hsData.object.HsData#methods_filter filter(col, filterObj)}</td><td>Filters the rows of values in column mode.</td></tr>\n<tr><td>{@link hsData.object.HsData#methods_load load(http)}</td><td>Loads the HsData object from a url or file</td></tr>\n<tr><td>{@link hsData.object.HsData#methods_map map(mapFn)}</td><td>Maps the rows of values in array mode.</td></tr>\n<tr><td>{@link hsData.object.HsData#methods_map map(col, mapFn)}</td><td>Maps the rows of values in column mode.</td></tr>\n<tr><td>{@link hsData.object.HsData#methods_sort sort(sortFn)}</td><td>Sorts the rows of values in array mode.</td></tr>\n<tr><td>{@link hsData.object.HsData#methods_sort sort(col, sortFn)}</td><td>Sorts the rows of values in column mode.</td></tr>\n<tr><td>{@link hsData.object.HsData#methods_newcolumn newColumn(newName, newFn)}</td><td>Adds a new column of data.</td></tr>\n<tr><td>{@link hsData.object.HsData#methods_coltype colType(col, newType)}</td><td>sets the data type for the column.</td></tr>\n</table>\n */\n\nif (typeof(angular) !== 'undefined') { \n\tangular.module('hsData').factory('HsData', function HsData() { \n\t\treturn hs('HsData'); \n\t}); \n}\n\nhs.register('HsData', ['HsObject', 'hsDataType', 'hsDataLoader', 'hsDeprecated', function HsData(HsObject, hsDataType, hsDataLoader, hsDeprecated) {\n    \"use strict\";\n    \n    var gCount = 0;\n    var deprecated = hsDeprecated();\n\n    function addSeries(meta, newName, newIndex) {\n        if (newName === (parseInt(newName)&'')) { throw 'newName ' + newName + ' can\\'t be an index'; }\n        var m = meta[newName];\n        if (m === undefined) { \n            m = meta[newName] = {};\n            m.name   = newName; \n            m.column = newIndex;\n            meta.push(m);           // access name by both column name and index\n        }\n        m.cast \t   = false;         // has not been cast yet\n        m.accessed = false;         // has not been accessed yet\n        return meta.length-1;\n    }\n    \n    function createData(address) {         \t\n        /**\n         * returns the domain of `values` in column `col` if interpreted as type `type`.\n         * If `cast` is true, the data values are also cast as appropriate for `type`.\n         * @param {Array} values row array of column array of values\n         * @param {integer|String} col the column number of name to analyse\n         * @param {String} type the type designator\n         * @param {Boolean} cast if true, also cast the data according to type\n         */\n        function getDomain(col, cast) {\n            var s, r;\n            col = colNumber(col); \n            if (col === undefined) { throw 'gMeta[' + col + '] is undefined in url ' + obj.url; }\n            var types = getTypes(col);\n            if (types.length === 0) {\n                console.log('*** no values for getting domain in column ' + col + ' \\'' + gMeta[col].name + '\\'');\n                return [];\n            } else if (types[0].domain && types[0].domain.length>0 && types[0].forced) {\n                return types[0].domain; // domain was explicitely set\n            }\n            \n            var type = types[0].type;\n            var domain = (type==='nominal')? [] : [1e99, -1e99];\n            var m = meta(col);\n            m.accessed = true;\n            if (m.cast === true) { cast = false; }  // only cast once\n            if (cast === true) { m.cast = true; }\n            switch (type) {\n                case 'nominal': \n                    for (r=0; r<gValues.length; r++) {\n                        s = ' ' + gValues[r][col] + ' ';\n                        if (s && s!=='' && s!=='0' && !domain[s] && (s.length !== undefined) && s.length>0) {\n                            domain.push(s);\n                            domain[s] = true;\n                        }\n                    }\n                    break;\n                case 'null': break;\n                default:    //ordinal\n                    for (r=0; r<gValues.length; r++) {\n                        s = gValues[r][col] = cast? hsDataType.castData(type, gValues[r][col]) : gValues[r][col];\n                        if (!isNaN(s)) {\n                            domain[0] = Math.min(domain[0], s);\n                            domain[1] = Math.max(domain[1], s);\n                        }\n                    }\n            }\n            if (type === 'date') {\n                if (domain[0] < 1e90 && domain[1] > -1e90) {\n                    domain[0] = new Date(domain[0]);\n                    domain[1] = new Date(domain[1]);\n                } else {\n                    domain = [];\n                }\n            }\n            types[0].domain = domain;\n            return domain;\n        }\n    \n        /**\n         * @param {number|string} col an object of series-names:series-values-array pairs. \n         * @return {Array} an array sorted by frequency of encountered types in column `name` of `data`\n         */\n        function getTypes(col) {\n            var m = meta(col);\n            if (m.types && m.types.length>0) { return m.types; }\n            var t = { };\n            col = m.column;\n            m.accessed = true;\n            for (var r=0; r<gValues.length; r++) {\n                var _t = hsDataType.getType(gValues[r][col]);\n                if (_t != null) {\n                    if (!t[_t]) { t[_t]=0; }\n                    t[_t]++;\n                }\n            }\n            var result = [{type:'real', count:0}];\n            for (var c in t) { result.push({type: c, count: t[c]}); }\n            result.sort(function(a, b) { \n                if (a.type === 'null' ) { return 1; }\n                if (b.type === 'null' ) { return -1; }\n                if (a.type==='currency'&&a.count>0) { return -1; }\n                if (b.type==='currency'&&b.count>0) { return 1; }\n                return b.count - a.count;\n            });\n            m.types = result;\n            return result;\n        }\n        \n        /**\n         * @ngdoc function\n         * @name newColumn\n         * @methodOf hsData.object.HsData\n         * @param {string} newName the name of the new column\n         * @param {function} newFn a function providing values for the new column. The function\n         * will be called once for each row with parameters<pre>\n         * rowValues: \tarray of column-values in current row\n         * i:\t\tthe current row index\n         * values:\t\tthe entire current 2D values array\n         * </pre> and should return the value for the new column in that row.\n         * @return {integer} the index of the new series\n         * @description Adds a new column of data as provided by the `newFn` to the data and defines it as a new series \n         * with the name `newName`. `newFn` is invoked for each row in the series with the series' `rowData` provided \n         * as parameter, and should return the new series column value for that row.\n         */\n        function newColumn(newName, newFn) {\n            var newCol = addSeries(gMeta, newName, gMeta.length);            \n            // use a mapping on the provided callback to generate the values for the new series:\n            obj._values = gValues = gValues.map(function(cols, i, arr) { \n                var rowValues = cols.slice(0);\n                rowValues[newCol] = newFn(rowValues, i, arr); \n                return rowValues;\n            });\n            return newCol;\n        }    \n        \n        /**\n         * @ngdoc function\n         * @name newRow\n         * @methodOf hsData.object.HsData\n         * @param {function} newFn a function providing values for the new row. The function\n         * will be called once with the current 2D values array as parameter, and should return \n         * an array of new column values for the row.\n         * @return {integer} the number of rows in the array.\n         * @description Adds a new row of data as provided by the `newFn` to the data. `newFn` is invoked once with the current 2D values array as parameter, and should return \n         * an array of new column values for the row.\n         */\n        function newRow(newFn) { \n            var row = newFn(gValues);\n            gValues.push(row);\n            return gValues.length-1;\n        }    \n        \n        /**\n         * @ngdoc function\n         * @name copy\n         * @methodOf hsData.object.HsData\n         * @return {HsData} a new HsData object representing a copy of the current object.\n         * The new object will have it own copy of the rows array (as returned by {@link hsData.object.HsData#methods_values `values()`}) \n         * to allow for specific filtering and sorting.\n         * However it will share the columns array with other objects to be memory efficient. \n         * I.e. after applying {@link hsData.object.HsData#methods_sort sorting} and/or {@link hsData.object.HsData#methods_filter filtering} to the copy, \n         * the array-of-columns for each row in the copy will exist in some unique row of the original.   \n         * @description\n         */\n        function copy() {\n            var newObj = createData(obj.url);\n            newObj.data(gValues, gMeta, false);\n            return newObj;\n        }\n            \n        /**\n         * @ngdoc method\n         * @name data\n         * @methodOf hsData.object.HsData\n         * @description sets the `values` and `meta` information for the HsData object by \n         * creating a deep copy (unless `deep` is false) of the values rows array, \n         * and a deep copy of names in the meta array.\n         * @param {number [row] [col]} values a 2D array of values\n         * @param {Object[]} meta a column array of meta information in either of two formats:\n         * - `meta[{name:<name>, column:<index}]`\n         * - `meta[<name>]`\n         * @param {boolean=} [deep=true] optional flag for creating a deep copy of the data\n         * @return {hsData} the hsData object\n         */\n        function data(values, meta, deep) {\n            if (deep===undefined) { deep = true; }\n            if (values === undefined || meta === undefined) {\n                console.log('*** \\'values\\' and \\'meta\\' arrays expected');\n                return;\n            }\n            if (deep) {\n                obj._values = gValues = [];\n                for (var r=0; r<values.length; r++) {\n                    gValues[r] = [];\n                    for (var c=0; c<values[r].length; c++) {\n                        gValues[r][c] = values[r][c];\n                    }\n                }\n            } else {\n            \tobj._values = gValues = values.slice();\n           \t}\n            var arr = true;\n            obj._meta = gMeta = [];\n            if (typeof meta[0] === 'string') { arr = false; }\n            for (var n=0; n<meta.length; n++) { \n            \tif (arr) { addSeries(gMeta, meta[n].name, meta[n].column); }\n            \t\telse { addSeries(gMeta, meta[n], gMeta.length); }\n            } \n\t\t\tif (values.length>0) {\n\t            if (values[0].length !== meta.length) {\n\t                console.log(address + ': meta array of length \"' + meta.length + '\" does not match number of columns ' + values[0].length);\n\t                console.log(meta);\n\t                console.log(values[0]);\n\t\t\t        var err = new Error('');\n\t\t\t        console.log(err.stack);                \n\t            }\n\t        }\n            invalidateDomains();\n            return obj;\n        }\n        \n        /**\n         * @ngdoc function\n         * @name query\n         * @methodOf hsData.object.HsData\n         * @param {Object} conditions a set of conditions.\n         * @return {HsData} an HsData object representing the rows that match the query. \n         * The HsData object will feature its own column meta information, as well as \n         * a copy of the rows array which allows for `filter` and `sort` operations. \n         * However, the column arrays will be shared with the original HsData object in order to be memory efficient.\n         * This means that `map` and `newColumn` operations on the new object will affect the original object or any \n         * object derived via `query`.  \n         * @description executes a query on the data. Each row in the data is checked and those for which\n         * `conditions` is true are returned as a new HsData object.  \n         *    ## General conditions\n         *    <pre>conditions = \n         *    indexCond || -> conditions on column index\n         *    valueCond || -> conditions on column values\n         *    </pre>\n         *    ## Index conditions\n         *    <pre>indexCond =\n         *    colIdx        || -> true if column index matches\n         *    [colIdx, ...] || -> true if any of the column indices match\n         *    </pre>\n         *    ## Value conditions\n         *    <pre>valueCond = \n         *    termCond  || -> terminal condition \n         *    recurCond || -> recursive combination of conditions\n         *    </pre>\n         *    ## Terminal conditions\n         *    <pre>termCond =\n         *    {colName:colValue}                || -> true if colValue matches \n         *    {colName:[colValue, ...]}         || -> true if any of the colValues match\n         *    {colName:function(value, rowValues)} -> true if function returns true \n         *    </pre>\n         *    ## Recursive combinations\n         *    <pre>recurCond =\n         *    {'or': valueCond}  || -> true if any condition is true\n         *    {'and': valueCond} || -> true if all conditions are true\n         *    {valueCond, ...}   || -> same as {'and': {valueCond, ...}}\n         *    {'not': valueCond} || -> true if none of the conditions are true\n         *    </pre>\n         *      \n         * @example\n            <example module=\"hsData\">\n              <file name=\"index.html\">\n                 <div ng-controller=\"myCtrl\">\n                 <h1>Data</h1>\n                 \t<table>\n                 \t    <th>Row</th><th ng-repeat=\"h in header\">{{h}}</th>\n              \t \t \t<tr ng-repeat=\"row in data\">\n              \t \t       <td>{{$index}}</td><td ng-repeat=\"field in row\">{{field}}</td>\n              \t \t    </tr>\n              \t \t</table>\n                 <h1>Queries:</h1>\n                 <table>\n                    <th>Description</th><th>Query</th><th>('Name')</th><th>.colValues().length</th>\n                    <tr><td>undefined query:</td><td></td><td>{{db.query()('Name')}}</td><td>{{db.query().colValues().length}}</td></tr>\n                    <tr><td>empty OR query:</td><td>[]</td><td>{{db.query([])('Name')}}</td><td>{{db.query([]).colValues().length}}</td></tr>\n                    <tr><td>empty AND query:</td><td>{}</td><td>{{db.query({})('Name')}}</td><td>{{db.query({}).colValues().length}}</td></tr>\n                    <tr><td>2nd row:</td><td>1</td><td>{{db.query(1)('Name')}}</td><td>{{db.query(1).colValues().length}}</td></tr>\n                    <tr><td>2nd+<br>3rd row:</td><td>[1,2]</td><td>{{db.query([1,2])('Name')}}</td><td>{{db.query([1,2]).colValues().length}}</td></tr>\n                    <tr><td>Simple:</td><td>{Name:'Peter'}</td><td>{{db.query({Name:'Peter'})('Name')}}</td><td>{{db.query({Name:'Peter'}).colValues().length}}</td></tr>\n                    <tr><td>Compound OR:</td><td>{Name:['Peter', 'Jane']}</td><td>{{db.query({Name:['Peter', 'Jane']})('Name')}}</td><td>{{db.query({Name:['Peter', 'Jane']}).colValues().length}}</td></tr>\n                    <tr><td>AND:</td><td>{Name:'Peter', Value:400}</td><td>{{db.query({Name:'Peter', Value:400})('Name')}}</td><td>{{db.query({Name:'Peter', Value:400}).colValues().length}}</td></tr>\n                    <tr><td>OR:</td><td>{or:{Name:'Peter', Value:1500}}</td><td>{{db.query({or:{Name:'Peter', Value:1500} })('Name')}}</td><td>{{db.query({or:{Name:'Peter', Value:1500} }).colValues().length}}</td></tr>\n                    <tr><td>AND:</td><td>{and:{Name:'Peter', Value:1500}}</td><td>{{db.query({and:{Name:'Peter', Value:1500} })('Name')}}</td><td>{{db.query({and:{Name:'Peter', Value:1500} }).colValues().length}}</td></tr>\n                    <tr><td>AND:</td><td>{and:{Name:'Peter', Value:400}}</td><td>{{db.query({and:{Name:'Peter', Value:400} })('Name')}}</td><td>{{db.query({and:{Name:'Peter', Value:400} }).colValues().length}}</td></tr>\n                    <tr><td>NOR:</td><td>{not:{Name:'Peter', Value:400}}</td><td>{{db.query({not:{Name:'Peter', Value:400} })('Name')}}</td><td>{{db.query({not:{Name:'Peter', Value:400} }).colValues().length}}</td></tr>\n                 </table>\n                 </div>\n              </file>\n              <file name=\"script.js\">\n                 angular.module('hsData').controller('myCtrl', function myCtrl($scope){\n                    $scope.header = ['Name', 'Value', 'Entry Date', 'Exit Date'];\n                    $scope.data = [\n                        ['Harry', '100', '3/1/14', '11/20/14'], \n                        ['Mary', '1500', '7/1/14', '9/30/14'],\n                        ['Peter', '400', '5/20/14', '4/30/15'],  \n                        ['Jane', '700', '11/13/14', '8/15/15']\n                      ];\n                    $scope.db = (new hs('HsData'))('local data');\n                    $scope.db.data($scope.data, $scope.header);\n                 });\n             </file>\n             <file name=\"style.css\">\n                table { width: 100%; }\n                th, td { padding-left:20px; }\n                tr:nth-child(even) {background: #fff}\n             </file>\n            </example>     \n         */\n        function query(conditions) {\n            try {\n                var rows = [];\n                for (var r=0; r<gValues.length; r++) { \n                    if (applyCondition(conditions, r, gValues[r])) { rows.push(gValues[r]); }\n                }\n                \n                var newObj = createData(obj.url);\n                newObj.data(rows, gMeta, false);\n\n                return newObj;\n            } catch(err) {\n                console.log(err);\n                console.log(err.stack);\n            }\n        }  \n        \n\t\t/**\n\t\t * internal recursive function for applying a compound condition to a row of values.\n\t\t * @return true if row matches the condition\n\t\t */        \n        function applyCondition(condition, r, rowValues, and) { \n            var orResult = false;\n            var andResult= true;          \n            if (condition===undefined) { return true; }\n            if (typeof condition === 'number') { return (condition === r); }\n            if (typeof condition === 'object') {\t\t\n                if (condition.length !== undefined) {\t// --> an array of elements\n                    for (var n=0; n<condition.length; n++) {\n                        if (typeof condition[n] === 'number') { \t\t \t// row numbers\n                        \tif (condition[n] === r) { orResult  = true; } \n                        \t\t\t\t\t\telse { andResult = false; }\n                        } else if (typeof condition[n] === 'object') { \t// \n                        \tif (applyCondition(condition[n], r, rowValues)) { orResult  = true; } // row number match\n    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\telse { andResult = false; }\n                        }\n                    }\n                } else { \t\t\t\t\t\t\t\t// not a array --> object\n                    if (and === undefined) { and = true; }  // if unspecified, consider condition an AND \n                    var conditionMet = and;\n                    for (var name in condition) {\n                        if      (name==='or')  { conditionMet = applyCondition(condition.or, r, rowValues, false); }\n                        else if (name==='and') { conditionMet = applyCondition(condition.and, r, rowValues, true); }\n                        else if (name==='not') { conditionMet = !applyCondition(condition.not, r, rowValues, false); }\n                        else {\n                            var col = colNumber(name);\n                            var val = condition[name];\n                            var func = (typeof val === 'function');\n                            var arr = ((typeof val === 'object') && (val.length!==undefined));\n                            if (isNaN(col)) { \n                                throw new Error(\"invalid colNumber name '\" + name + \"' for url \" + obj.url);\n                            } else if (func) { \n                                conditionMet = val(rowValues[col], rowValues);\n                            } else if (arr) {\n                                conditionMet = (val.length === 0); // empty arrays meet condition\n                                for (var c=0; c<val.length; c++) {\n                                    if (rowValues[col] === val[c]) { conditionMet = true; } // query true if at least one c true\n                                }\n                            } else { // object: all conditions have to be met, unless specified as or\n                                conditionMet = (rowValues[col] === val); \n                            }\n                        }\n                        if (conditionMet) { orResult  = true;  if(!and) { break; }} // exit for name loop\n                        \t\t\t else { andResult = false; if(and)  { break; }}\n                    }\n                }    \n            }\n            return and? andResult : orResult;\n        }\n\n        \n        /**\n         * @ngdoc method\n         * @name .#_outerFunction\n         * @methodOf hsData.object.HsData\n         * @param {[number|string]} args the column for which to return values, \n         * passed as the first element in an array,\n         * can be either a column index or a vaid key string.\n         * @return {number[ ]} returns the array of column data in the series; \n         * @description Outer function, retrieves data from teh HsData object by returning \n         * the result of colValues(args[0).  Use as follows:<pre>\n         * var hsData = HsData(url).load();\n         * var array = hsData();           // array[row][col]\n         * var carr  = hsData('colName');  // array[row]\n         */\n        function _outerFunction(args) { \n        \tvar result = colValues(args[0]);\n        \treturn result; \n        }\n        \n        /**\n         * @ngdoc method\n         * @name .#colValues\n         * @methodOf hsData.object.HsData\n         * @param {number|string=} col will return the data in the specified colNumber. \n         * `col` can be either a column index or a vaid key string.\n         * If omitted, the entire rows array will be returned\n         * @return {number[ ] | number[ ][ ]} if `col` is specified, returns the array [col] of column data in the series.\n         * Otherwise returns the the 2D array [row][col] of data in the database.\n         * @description column values accessor. \n         */\n        function colValues(col) {\n        \tif (col === undefined) { return gValues; }\n        \telse {\n                col = colNumber(col);\n                meta(col);\n                getDomain(col, true);\n                var result = [];           \n                for (var r=0; r<gValues.length; r++) { result[r] = gValues[r][col]; }\n                return result;\n        \t}\n        } \n        \n         /**\n          * internal function\n          */\n         function meta(colIndex) {\n        \t if (!gMeta[colIndex]) { return undefined; }\n        \t gMeta[colIndex].accessed = true;\n        \t return gMeta[colIndex];\n         } \n\n        /**\n         * @ngdoc function\n         * @name colType\n         * @methodOf hsData.object.HsData\n         * @param {number|string} col the data column (by index or name) for which to get or set the type.\n         * @param {string=} newType optional type override.\n         * @return {string | HsData} the {@link hsData.hsDataType#methods_gettype data type} for the column if no `newType` is specified,\n         * or the data object if a type override was provided to allow for command chaining; \n         */\n        function colType(col, newType) {\n            var m = meta(col);\n            if (!m) { return undefined; }\n            if (newType) { \n                var types = getTypes(col);\n                types[0].type = newType; \n                types[0].domain = undefined;\n                m.cast = false;\n                return obj;\n            }\n            return getTypes(col)[0].type;\n        }\n        \n        /**\n         * @ngdoc function\n         * @name colDomain\n         * @methodOf hsData.object.HsData\n         * @param {number|string} col the data column for which to get the type.\n         * @param {number[...]=} newDomain optional type override.\n         * @return {string} the data domain for the column. For `nominal` types this is an array\n         * containing all observed values; for types `real`, `data`, or `percent`, an array with [min, max] is returned.\n         */\n        function colDomain(col, newDomain) {\n            var m = meta(col);\n            if (!m) { return undefined; }\n            if (newDomain) {\n                getTypes(col)[0].domain = newDomain;\n                getTypes(col)[0].forced = true;\n            }\n            return getDomain(col, true);\n        }\n        \n        /**\n         * @ngdoc function\n         * @name colNumber\n         * @methodOf hsData.object.HsData\n         * @param {number|string} column the data column for which to return the name. \n         * @description returns the column index of the specified column. \n         * `col` can be either an index or a name.\n         * @return {number} the column number or `undefined`.\n         */\n        function colNumber(col) {\n            var m = meta(col);\n            if (!m) { return undefined; }\n            m.accessed = true; \n            return m.column; \n        }\n        \n        /**\n         * @ngdoc function\n         * @name colName\n         * @methodOf hsData.object.HsData\n         * @param {number|string=} col optional data column for which to return the name. `col` can be either an index or a name.\n         * @description returns the specified column name or all column names.\n         * @return {string | string[ ]} the name of the specified column, or an array of column names if `col` is omitted,\n         * or `undefined`.\n         */\n        function colName(col)  { \n            if (col === undefined) {\n                var names = [];\n                for (var c=0; c<gMeta.length; c++) {\n                    names[c] = gMeta[c].name;\n                }\n                return names;\n            } else {\n                var m = meta(col);\n            \tif (!m) { return undefined; }\n            \tm.accessed = true; \n            \treturn m.name;\n            }\n        }\n        \n        function invalidateDomains() {\n            for (var c=0; c<gMeta.length; c++) { gMeta[c].domain = undefined; }\n        }\n        \n        /** \n         * @ngdoc function\n         * @name filter\n         * @methodOf hsData.object.HsData\n         * @param {number=} col optional; the data column (index or name) to apply conditions to. \n         * @param {function | conditions} filterObj either a filter function of a conditions object. \n         * It follows the same specifications as \n         * - if a function, the function passed to Array.filter()\n         * - if a conditions object, the conditions object passed to query()\n         * @return {HsData} the HsData object in order to allow for chaining.\n         * @description Filters the rows of values based on the result of the `filterObj`. The method behaves \n         * similarly as the Array.filter() method, except that it filters in place rather than return a new copy of the array.\n         * Two modes are supported:\n         * # Array Mode (deprecated)\n         * If `col` is omitted and `filterObj` is a function, the column arrays for each row are passed as \n         * samples into the `filterObj`. This allows for complex filters combining conditions across multiple columns.<br>\n         * `data.filter(function(cols){ return (cols[3]>0) && (cols[5]!==''); });`\n         * # Column mode (deprecated)\n         * If `col` is specified, either as index or by column name, the respective column value is passed\n         * into `filterObj`. This allows filtering for simple conditions.<br>\n         * `data.filter('Date', function(col) { return col.getYear() > 2014; });`\n         * # Query Mode\n         * If none of the above, `filterObj` specifies a set of query conditions as described in {@link hsData.object.HsData#methods_query query}\n         */\n        function filter(col, filterObj) {\n            if (typeof col === 'function') {\n//            \tdeprecated('deprecated call to filter in Column mode');\n                filterObj = col;\n                obj._values = gValues = gValues.filter(filterObj);\n                invalidateDomains();\n            } else if(((typeof col === 'string') || (typeof col === 'number')) && (typeof filterObj === 'function')){\n            \tdeprecated('deprecated call to filter in Array mode');\n                col = colNumber(col);\n                obj._values = gValues = gValues.filter(function(cols) {\n                    return filterObj(cols[col]);\n                });\n            } else {\n                filterObj = col;\n                var result = [];\n                for (var r=0; r<gValues.length; r++) { \n\t                if (applyCondition(filterObj, r, gValues[r])) { result.push(gValues[r]); }\n\t            }\n                obj._values = gValues = result;\n                invalidateDomains();\n            }\n            return obj;\n        }\n        \n        /**\n         * @ngdoc function\n         * @name sort\n         * @methodOf hsData.object.HsData\n         * @param {number=} col optional; the data column to use for sorting. \n         * @param {function | string} sortFn a function to implement the conditions, \n         * follows the same specifications as the function passed to Array.sort(). \n         * Some predefined sort function can be invoked by providing a \n         * respective string instead of a function. The following functions are defined:\n           <table>\n         \t<tr><td>'`ascending`'</td><td>sort in ascending order.</td></tr>\n         \t<tr><td>'`descending`'</td><td>sort in decending order.</td></tr>\n           </table>\n         * @return {HsData} the HsData object in order to allow for chaining.\n         * @description Sorts the rows of values based on the result of the `sortFn`, \n         * which behaves similarly to the Array.sort method.  \n         * Two modes are supported:\n         * # Array Mode\n         * If `col` is omitted, the column arrays are passed as samples into the `sortFn`. \n         * This allows for complex sorts, combining conditions across multiple columns.<br>\n         * `data.sort(function(row1, row2){ return row1[5] - row2[5]; });`\n         * # Column mode\n         * If `col` is specified, either as index or by column name, the respective column value is passed\n         * into `sortFn`. This allows filtering for simple conditions.<br>\n         * **The specified column will be automatically cast prior to sorting**<br>\n         * `data.sort('Date', function(val1, val2) { return val1 - val2; });`\n         */\n        function sort(col, sortFn) {            \n        \tfunction descendingNum(a, b) { return b-a; }\n        \tfunction ascendingNum(a, b) { return a-b; }\n        \tfunction descending(a, b) { return (b>a)?1:((b===a)?0:-1); }\n        \tfunction ascending(a, b) { return (a>b)?1:((b===a)?0:-1); }\n\n            if (typeof col === 'function') {\n                sortFn = col;\n                gValues.sort(sortFn);\n            } else {\n                cast(col);\n                col = colNumber(col);\n                var t = colType(col);\n                if (typeof sortFn === 'string') {\n                    if (sortFn==='descending') { sortFn = (t==='nominal')? descending : descendingNum; }\n                    else if (sortFn==='ascending') { sortFn = (t==='nominal')? ascending : ascendingNum; }\n                    else {\n                        console.log('sort function \"' + sortFn + '\" not recognized; defaulting to descending sort');\n                        sortFn = descending; \n                    }\n                }\n                gValues.sort(function(row1, row2) { \n                    return sortFn(row1[col], row2[col]); \n                });\n            }\n            return obj;\n        }\n        \n        /** \n         * @ngdoc function\n         * @name map\n         * @methodOf hsData.object.HsData\n         * @param {number=} col optional; the data column to apply the mapping to. \n         * @param {function | string} mapFn a function to implement the mapping, \n         * follows the same specifications as the function passed to Array.map().<br>\n         * For column mode, some predefined map functions can be invoked by providing a \n         * respective string instead of a function. The following functions are defined:\n           <table>\n         \t<tr><td>'cumulate'</td><td>replace value with the cumulative sum of values up to the current element.</td></tr>\n           </table>\n         * @return {HsData} the HsData object in order to allow for chaining.\n         * @description Maps one or more columns in each rows of values based \n         * on the result of the `mapFn`, which behaves similarly to the Array.map() method.\n         * Two modes are supported:\n         * # Array Mode\n         * If `col` is omitted, the `mapFn` is passed the column arrays per row as parameter. \n         * This allows for complex mapping combining conditions across multiple columns.<pre>\n         * data.map(function(values){ \n         *    values[1] = values[3] * values[5]; \n         *    return values; \n         * });</pre>\n         * Be sure to return the `values` array as a result.\n         * # Column mode\n         * If `col` is specified, either as index or by column name, the respective column value is passed\n         * into `mapFn`, along with the row index and the entire row array. This allows for simple mapping.<pre>\n         * data.map('Price', function(value, i, values) { \n         *    return value * 2; \n         * });</pre>\n         */\n        function map(col, mapFn) {\n            function noop(val) { return val; }\n            function cumulate() { var sum=0; return function(val) { sum += +val; return sum; };}\n            \n            if (typeof col === 'function') {\n                mapFn = col;\n                obj._values = gValues = gValues.map(mapFn);\n                invalidateDomains();\n            } else {\n                col = colNumber(col);\n                if (mapFn==='cumulate') { mapFn = cumulate(); }\n                else if (mapFn==='noop') { mapFn = noop; }\n                else if (typeof mapFn !== 'function') { \n                \tconsole.log('map function \"' + mapFn + '\" not recognized; defaulting to noop function');\n                \tmapFn = noop;  \n                }\n\n                obj._values = gValues = gValues.map(function(cols, i/*, arr*/) { \n                    var newCols = cols.slice(0);\n                    newCols[col] = mapFn(newCols[col], i, newCols); \n                    return newCols;\n                });\n                gMeta[col].domain = undefined; \n            }\n            return obj;\n        }\n        \n        /**\n         * @ngdoc method\n         * @name .#cast\n         * @methodOf hsData.object.HsData\n         * @param {number|array=} col the column, or array of columns, to cast. Indeces and names are valid.\n         * If omitted, all previously accessed columns will be cast.\n         * @param {string=} type the type to cast to. This overrides the automatic type detection.\n         * Only valid if col is specified.\n         * {@link hsData.hsDataType#castData hsDataType.castData} for valid type specifiers.\n         * @description casts columns of values to their predominant type. \n         */\n        function cast(col, type) {\n            var c;\n            function castCol(col) {\n                if (type !== undefined) { getTypes(col)[0].type=type; }\n                meta(colNumber(col)).cast = false;\n                getDomain(col, true);\n            }\n            if (col === undefined) {\n                for (c=0; c<gMeta.length; c++) {\n                    gMeta[c].cast = false;\n                    getDomain(c, true);\n                }\n            } else {\n                if (col instanceof Array) {\n                    for (c=0; c<col.length; c++) { castCol(col[c]); }\n                } else { \n                    castCol(col); \n                }\n            }\n        }\n        \n\t    /**\n\t     * @ngdoc function\n\t     * @name load\n\t     * @methodOf hsData.object.HsData\n\t     * @param {object=} http an optional http access object to use. Supported objects are\n\t     * - angular $http\n\t     * - jquery $\n\t     * - or any object that supports the pattern `*.get(address).success(callback).error(callback)`\n\t     * @description a static load function. Loads a CSV formatted string from `csvURL` and returns a promise for an \n\t     * HsData object initialized with the data. If multiple HsData objects call `load` with the same url,\n\t     * each HsData object will contain a shallow copy of the original data.  \n\t     * @return {HsPromise} a promise on an initialized HsData object.\n\t     */\n        function load(http) {\n\t\t\treturn hsDataLoader.load(obj.url, http).then(\n\t\t\t\tfunction success(series) { \n\t\t\t\t\treturn obj.data(series.values, series.meta, false);\n\t\t\t\t},\n\t\t\t\tfunction failure(reason) { \n\t\t\t\t\treturn console.log(\"Error loading data from \" + obj.url + \":\" + reason);\n\t\t\t\t}\n\t\t\t);\n\t     }\n        \n        var gValues;\t// 2D array [row][column]\n        var gMeta; \n        var obj = new HsObject('HsData');\n        obj._outerFunction = _outerFunction;\n        /**\n         * @ngdoc object\n         * @name url\n         * @propertyOf hsData.object.HsData\n         * @description the URL from where the data originated\n         */\n        obj.url         = address;\n        obj.copy        = copy;     \n        obj.data        = data;     \n        obj.load        = load;     \n        obj.newColumn   = newColumn;\n        obj.newRow\t    = newRow;\n        obj.query       = query;    \n        obj.colType     = colType;     \n        obj.colDomain   = colDomain;   \n        obj.colValues\t= colValues;\n        obj.colNumber   = colNumber;   \n        obj.colName     = colName;     \n        obj.filter      = filter;   \n        obj.sort        = sort;     \n        obj.map         = map;      \n        obj.cast        = cast;     \n        obj.id          = parseInt(Math.random()*100);\n        gCount++;\n//        console.log('data object ' + obj.id + ', total: ' + gCount);\n        return obj;\n    }\n     \n    return createData;\n}]);\n","/**\n * @ngdoc service\n * @name hsData.hsDataLoader\n * @requires hsData.object.HsData\n * @description\n * Provides a function that loads csv files from a server. Multiple requests to the same address will \n * be resolved via a caching a single call to the address.\n */\nif (typeof(angular) !== 'undefined') { angular.module('hsData').factory('hsDataLoader', function HsDataLoader() { return hs('hsDataLoader'); }); }\n \nhs.register('hsDataLoader', ['HsPromise', function HsDataFactory(HsPromise) {\n\t\"use strict\";\n\t\n\tvar urlCache = {};\t// caches <url>:HsData pairs\n\t\n\tfunction resolveRelay(url) {\n        var i = url.indexOf('?relay=');\n        return (i > 0)? '?relay='+encodeURIComponent(url.substring(i+7)) : url;\n\t}\n\t\n\t/** \n     * @ngdoc method\n     * @name .#load\n     * @methodOf hsData.hsDataLoader\n\t * @param {string} csvURL the url to load from\n\t * @param {object} http the http obect to use \n\t * @description loads a CSV formatted string from `csvURL` and returns a promise for an \n\t * HsData object initialized with the data. `load` maintians a cache that is checked \n\t * for a prior request to url and creates a new request if none exists.\n\t * @return {HsPromise} a promise on an {values, meta} object\n\t */\n\tfunction load(csvURL, http) {\n\t\tif (urlCache[csvURL] === undefined) { \n\t\t\turlCache[csvURL] = new HsPromise(function(fulfill, reject) {\n\t\t\t\t// check for undefined or empty url\n\t\t\t\tif (!csvURL.length) { reject(\"invalid url provided\"); }\n\t\t\t\t\n\t\t\t\t// replace by possible relay, if any\n\t            var address = resolveRelay(csvURL);\n\t            \n\t            // request data\n\t            http.get(address).success(function receive(data) {\n\t                // data received successfully\n\t                fulfill(arrayFromCSVData(data, address));                   \n\t            }).error(function error(data, status) {\n\t            \treject('no csvFileName; error code: ' + JSON.stringify(status) + ' for ' + csvURL);\n\t            });\n\t\t\t}); \n\t\t}\n\t\treturn urlCache[csvURL];\n\t}\n     \n    /**\n     * @ngdoc method\n     * @name .#arrayFromCSVData\n     * @methodOf hsData.hsDataLoader\n     * @deprecated\n     * @param {String} data the serialized csv-style data in a string\n     * @return {object} an object containing a values and a meta array.\n     * @description **deprecated as public method** \n     * constructs a {values, meta} object from a table of data in CSV format.\n     * \n     */\n    function arrayFromCSVData(data) {      \n\t\tfunction addSeries(meta, newName) {\n\t\t    if (newName === (parseInt(newName)+'')) { throw 'newName ' + newName + ' can\\'t be an index'; }\n\t\t    meta[newName] = { name: newName, column: meta.length };    // access column index by name:\n\t\t    meta.push(meta[newName]);                                       // access name by column index\n\t\t    return meta.length-1;\n\t\t}\n        // eliminate line feeds inside quotes (Excel export generates these if a cell spans several lines)\n        data = data.replace(/(\\\"[^\\\"]*?)([\\n\\r])([^\\\"]*\\\")/g, /$1 $3/); // \" close the regex quotation\n        var lf = (data.match(/\\n/g)||[]).length;\n        var cr = (data.match(/\\r/g)||[]).length;\n        var c, r, cols, rows;\n        if (cr>2*lf)      { rows = data.split(/[\\r]/); }\n        else if (lf>2*cr) { rows = data.split(/[\\n]/); }\n                     else { rows = data.split(/[\\r\\n]+/); }\n\n        // create names and values struct\n        var series = { values:[], meta:[] };\n        var exclude = [];                               // columns to exclude if they have no name in first row\n        for (r=0; r<rows.length; r++) {\n            cols = rows[r].split(',');\n            if (r===0) {                                // first row contains headers\n                for (c=0; c<cols.length; c++) { \n                    if (cols[c] === '') { exclude.push(c); }\n                    else  { addSeries(series.meta, cols[c].trim()); } \n                }\n            } else if (rows[r].length >= cols.length) { // rows[r] contains useful info beyond just commas\n                for (c=0; c<cols.length; c++) { cols[c] = cols[c].trim(); }\n                // remove any excluded columns:\n                for (var e=exclude.length-1; e>=0; e--) { cols.splice(exclude[e], 1); }\n                series.values.push(cols);               // row = array of colVals\n            }\n        }\n        return series;\n    }\n       \n     /**\n     * @ngdoc method\n     * @name .#toCSVData\n     * @methodOf hsData.hsDataLoader\n     * @param {HsData} hsData the data model to be serialized into a CSV string\n     * @return {String} an string \n     * @description constructs a HsData object from a table of data in CSV format\n     */\n    function toCSVData(hsData) {   \n    \tvar names = hsData.colName();  \t// array of column names\n    \tvar data = hsData.query().colValues(); // 2D array of values\n    \tvar result = '';\n    \tvar r,c;\n    \tfor (c=0; c<names.length; c++) { result += (c>0?',':'') + names[c]; }\n    \tresult += '\\n';\n    \tfor (r=0; r<data.length; r++) {\n    \t\tfor (c=0; c<data[r].length; c++) { result += (c>0?',':'') + data[r][c]; }\n        \tresult += '\\n';\n    \t}\n    \treturn result;\n    }\n    \n    \n\treturn { \n\t    load: \t \t \t\tload,\n\t\tarrayFromCSVData: \tarrayFromCSVData,\n\t    toCSVData:\t \t\ttoCSVData\n\t};\n}]);\n\n\n","/**\n * @ngdoc service\n * @name hsData.hsDataType\n * @description\n * Provides an object with convenience functions to access in-memory data sets.\n * - {@link hsData.hsDataType#methods_todate hsDataType.toDate} \n * - {@link hsData.object.HsData#methods_colvalues colValues}\n */\n\nif (typeof(angular) !== 'undefined') { \n\tangular.module('hsData').factory('hsDataType', function() { \n\t\treturn hs('hsDataType'); \n\t}); \n}\n\nhs.register('hsDataType', function() {\n    /**\n     * @ngdoc method\n     * @name .#toDate\n     * @methodOf hsData.hsDataType\n     * @param {String} str the string to convert to a data\n     * @param {integer=} limitYear the year below which the century is corrected. Defaults to 1970.\n     * @returns {Date} a new Date object parsed from `str`.\n     * @description returns a new Date object parsed from `str` and corrects for a difference in \n     * interpreting centuries between webkit and mozilla in converting strings to Dates:\n     * The string \"15/7/03\" will convert to Jul 15 1903 in Mozilla and July 15 2003 in Webkit.\n     * If `limitYear` is not specified this method uses 1970 as the decision date: \n     * years 00-69 will be interpreted as 2000-2069, years 70-99 as 1970-1999.\n     */\n    function toDate(str, limitYear) {\n        limitYear = limitYear || 1970;\n        if (!str) { str = '1/1/1970'; }\n        var d = new Date(str),\n            yy = d.getFullYear();               // to correct for century difference between Webkit and Firefox\n        if (yy<limitYear) { d.setFullYear(yy+100); }    // for short years in strings such as '1/1/14'\n        return d;\n    }\n\n    /**\n     * @ngdoc method\n     * @name .#castData\n     * @methodOf hsData.hsDataType\n     * @param {String} type ['date' | 'percent' | 'real' | _any_] The type to cast into. In case of _any_ - i.e. `type` \n     * does not match any of the previous keywords, no casting occurs.\n     * @param {float} sample The value to cast.\n     * @returns {Object} The result of the cast. \n     * @description Casts the sample to the specified data type.\n     */\n    function castData(type, sample) {\n        var n;\n        switch (type) {\n            case 'date':    n = toDate(sample);\n                            if (isNaN(n.getTime())) { n = null; }\n                            break;\n            case 'percent': n = parseFloat(sample)/100;\n                            if (isNaN(n)) { n = null; }\n                            break;\n            case 'currency':// replace all except 'e/E', '.', '+/-' and digits\n            \t\t\t\tif (typeof sample === 'string') { sample = sample.replace(/[^eE\\+\\-\\.\\d]/g, ''); }            \t\t\t\t\n            \t\t\t\t/* falls through */\n            case 'real':    n = parseFloat(sample); \n                            if (isNaN(n)) { n = null; }\n                            break;\n            default:        n = ''+sample;\n        }\n        return n;\n     }\n     \n    /**\n     * @ngdoc method\n     * @name .#getType\n     * @methodOf hsData.hsDataType\n     * @param {Object} sample .\n     * @returns {String} the type ('real', 'date', 'percent', 'nominal') corresponding to the sample\n     * @description determines the data type. Supported types are <pre>\n     * 'date':    sample represents a Date, either as a Date object or a String \n     * 'real':    sample represents a real number\n     * 'percent': sample represents a percentage (special case of a real number)\n     * 'nominal': sample represents a nominal (ordinal or categorical) value\n     * </pre>\n     */\n    function getType(sample) {\n        if (sample!==\"\" && sample) {\n            if (sample instanceof Date) { return 'date'; }  // if sample is already a date:\n            if (!isNaN(+sample))         { return 'real'; }\n            if (sample.indexOf('$')===0) {\n            \tif (!isNaN(parseFloat(sample.slice(1)))) { return 'currency'; }\n            }\n\n            var d = toDate(sample);\n            if (d instanceof Date) { // sees ints as valid dates\n                if (!isNaN(d)) {\n                    if (d.getFullYear()>1900)\t{ return 'date'; }\n                } \n            }\n\n            if (typeof sample === 'string') { \n                if (sample.indexOf('%') === sample.length-1) {\n                    if (!isNaN(parseFloat(sample))) { return 'percent'; }\n                }\n                if (sample.match(/^\\$\\d{0,2}((,\\d\\d\\d)*)/g)) {\n                    if (!isNaN(parseFloat(sample.trim().replace(/[^eE\\+\\-\\.\\d]/g, '').replace(/,/g, '')))) { return 'currency'; }\n                }\n                switch (sample.toLowerCase()) {\n                    case \"null\": break;\n                    case \"#ref!\": break;\n                    default: if (sample.length>0) { return 'nominal'; }\n                }\n            }\n        }\n        return null;\n    }    \n    return {\n        toDate:     toDate,\n        castData:   castData,\n        getType:    getType\n    };\n});\n","/**\n * @ngdoc overview\n * @name index\n * @description\n * \n * hsData\n * ======\n * Provides utility functions to manage and manipulate in-memory data sets.\n * Functions are provided as hs modules to provide a simple dependency injection mechanism.\n * As a convenience for integration with AngularJS, AngularJS modules are provided as well. \n * \n * The codebase is available at {@link https://github.com/HelpfulScripts/hsData}\n * \n * Overview\n * --------\n * - {@link hsData.hsDataLoader hsDataLoader} provides methods for loading CSV data from a file or a server.\n * - {@link hsData.hsDataType hsDataType} provides methods to determine the data type and type-cast data.\n * - {@link hsData.object.HsData HsData} a simple in-memory database with query, sort and filter functions.\n * \n * Dependencies\n * ------------\n * - {@link https://github.com/angular/angular.js AngularJS} 1.3.5 or higher; \n *    optional, for integration with angular modules\n * - {@link #/hs/ hs} 1.0.0 or higher; \n *    Helpful Scripts foundational services \n *    \n */\n"]}